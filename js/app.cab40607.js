(function(e){function n(n){for(var t,r,l=n[0],c=n[1],d=n[2],p=0,u=[];p<l.length;p++)r=l[p],Object.prototype.hasOwnProperty.call(a,r)&&a[r]&&u.push(a[r][0]),a[r]=0;for(t in c)Object.prototype.hasOwnProperty.call(c,t)&&(e[t]=c[t]);i&&i(n);while(u.length)u.shift()();return o.push.apply(o,d||[]),s()}function s(){for(var e,n=0;n<o.length;n++){for(var s=o[n],t=!0,l=1;l<s.length;l++){var c=s[l];0!==a[c]&&(t=!1)}t&&(o.splice(n--,1),e=r(r.s=s[0]))}return e}var t={},a={app:0},o=[];function r(n){if(t[n])return t[n].exports;var s=t[n]={i:n,l:!1,exports:{}};return e[n].call(s.exports,s,s.exports,r),s.l=!0,s.exports}r.m=e,r.c=t,r.d=function(e,n,s){r.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:s})},r.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,n){if(1&n&&(e=r(e)),8&n)return e;if(4&n&&"object"===typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(r.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var t in e)r.d(s,t,function(n){return e[n]}.bind(null,t));return s},r.n=function(e){var n=e&&e.__esModule?function(){return e["default"]}:function(){return e};return r.d(n,"a",n),n},r.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},r.p="/vue-virtual-tree/";var l=window["webpackJsonp"]=window["webpackJsonp"]||[],c=l.push.bind(l);l.push=n,l=l.slice();for(var d=0;d<l.length;d++)n(l[d]);var i=c;o.push([0,"chunk-vendors"]),s()})({0:function(e,n,s){e.exports=s("cd49")},"003e":function(e,n,s){"use strict";s("376c")},"039a":function(e,n,s){var t=s("6d81");t.__esModule&&(t=t.default),"string"===typeof t&&(t=[[e.i,t,""]]),t.locals&&(e.exports=t.locals);var a=s("499e").default;a("5e99887d",t,!0,{sourceMap:!1,shadowMode:!1})},"1cd4":function(e,n,s){var t=s("24fb");n=t(!1),n.push([e.i,".demo-box[data-v-2fcb3fd2]{display:inline-block;width:100%;margin-bottom:16px;border:1px solid #dcdee2;border-radius:2px;transition:border-color .2s ease-in-out}.demo-box[data-v-2fcb3fd2]:target{border-color:#2d8cf0}.demo-box .show[data-v-2fcb3fd2]{padding:42px 24px 50px;border-bottom:1px solid #dcdee2}.demo-box .meta[data-v-2fcb3fd2]{position:relative;border-radius:0 0 2px 2px}.demo-box .meta .title[data-v-2fcb3fd2]{position:absolute;top:-14px;margin-left:16px;padding:1px 8px;background-color:#fff;border-radius:2px 2px 0 0}.demo-box .meta .desc[data-v-2fcb3fd2]{padding:18px 24px 12px}.demo-box .meta .actions[data-v-2fcb3fd2]{padding:12px 0;border-top:1px dashed #f0f0f0;opacity:.7;text-align:center;transition:opacity .3s;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.demo-box .meta .actions[data-v-2fcb3fd2]:hover{opacity:1}.demo-box .meta .actions .act[data-v-2fcb3fd2]{margin-right:8px}.demo-box .highlight-wrap[data-v-2fcb3fd2]{border-radius:0 0 2px 2px}.demo-box .highlight-wrap .highlight[data-v-2fcb3fd2]{padding:16px 32px}",""]),e.exports=n},"376c":function(e,n,s){var t=s("e31f");t.__esModule&&(t=t.default),"string"===typeof t&&(t=[[e.i,t,""]]),t.locals&&(e.exports=t.locals);var a=s("499e").default;a("77858217",t,!0,{sourceMap:!1,shadowMode:!1})},4445:function(e,n,s){var t=s("24fb");n=t(!1),n.push([e.i,".demo[data-v-10a86b8b]{display:flex;justify-content:space-between}.demo section[data-v-10a86b8b]{width:45%}",""]),e.exports=n},4678:function(e,n,s){var t={"./af":"2bfb","./af.js":"2bfb","./ar":"8e73","./ar-dz":"a356","./ar-dz.js":"a356","./ar-kw":"423e","./ar-kw.js":"423e","./ar-ly":"1cfd","./ar-ly.js":"1cfd","./ar-ma":"0a84","./ar-ma.js":"0a84","./ar-sa":"8230","./ar-sa.js":"8230","./ar-tn":"6d83","./ar-tn.js":"6d83","./ar.js":"8e73","./az":"485c","./az.js":"485c","./be":"1fc1","./be.js":"1fc1","./bg":"84aa","./bg.js":"84aa","./bm":"a7fa","./bm.js":"a7fa","./bn":"9043","./bn-bd":"9686","./bn-bd.js":"9686","./bn.js":"9043","./bo":"d26a","./bo.js":"d26a","./br":"6887","./br.js":"6887","./bs":"2554","./bs.js":"2554","./ca":"d716","./ca.js":"d716","./cs":"3c0d","./cs.js":"3c0d","./cv":"03ec","./cv.js":"03ec","./cy":"9797","./cy.js":"9797","./da":"0f14","./da.js":"0f14","./de":"b469","./de-at":"b3eb","./de-at.js":"b3eb","./de-ch":"bb71","./de-ch.js":"bb71","./de.js":"b469","./dv":"598a","./dv.js":"598a","./el":"8d47","./el.js":"8d47","./en-au":"0e6b","./en-au.js":"0e6b","./en-ca":"3886","./en-ca.js":"3886","./en-gb":"39a6","./en-gb.js":"39a6","./en-ie":"e1d3","./en-ie.js":"e1d3","./en-il":"7333","./en-il.js":"7333","./en-in":"ec2e","./en-in.js":"ec2e","./en-nz":"6f50","./en-nz.js":"6f50","./en-sg":"b7e9","./en-sg.js":"b7e9","./eo":"65db","./eo.js":"65db","./es":"898b","./es-do":"0a3c","./es-do.js":"0a3c","./es-mx":"b5b7","./es-mx.js":"b5b7","./es-us":"55c9","./es-us.js":"55c9","./es.js":"898b","./et":"ec18","./et.js":"ec18","./eu":"0ff2","./eu.js":"0ff2","./fa":"8df4","./fa.js":"8df4","./fi":"81e9","./fi.js":"81e9","./fil":"d69a","./fil.js":"d69a","./fo":"0721","./fo.js":"0721","./fr":"9f26","./fr-ca":"d9f8","./fr-ca.js":"d9f8","./fr-ch":"0e49","./fr-ch.js":"0e49","./fr.js":"9f26","./fy":"7118","./fy.js":"7118","./ga":"5120","./ga.js":"5120","./gd":"f6b4","./gd.js":"f6b4","./gl":"8840","./gl.js":"8840","./gom-deva":"aaf2","./gom-deva.js":"aaf2","./gom-latn":"0caa","./gom-latn.js":"0caa","./gu":"e0c5","./gu.js":"e0c5","./he":"c7aa","./he.js":"c7aa","./hi":"dc4d","./hi.js":"dc4d","./hr":"4ba9","./hr.js":"4ba9","./hu":"5b14","./hu.js":"5b14","./hy-am":"d6b6","./hy-am.js":"d6b6","./id":"5038","./id.js":"5038","./is":"0558","./is.js":"0558","./it":"6e98","./it-ch":"6f12","./it-ch.js":"6f12","./it.js":"6e98","./ja":"079e","./ja.js":"079e","./jv":"b540","./jv.js":"b540","./ka":"201b","./ka.js":"201b","./kk":"6d79","./kk.js":"6d79","./km":"e81d","./km.js":"e81d","./kn":"3e92","./kn.js":"3e92","./ko":"22f8","./ko.js":"22f8","./ku":"2421","./ku.js":"2421","./ky":"9609","./ky.js":"9609","./lb":"440c","./lb.js":"440c","./lo":"b29d","./lo.js":"b29d","./lt":"26f9","./lt.js":"26f9","./lv":"b97c","./lv.js":"b97c","./me":"293c","./me.js":"293c","./mi":"688b","./mi.js":"688b","./mk":"6909","./mk.js":"6909","./ml":"02fb","./ml.js":"02fb","./mn":"958b","./mn.js":"958b","./mr":"39bd","./mr.js":"39bd","./ms":"ebe4","./ms-my":"6403","./ms-my.js":"6403","./ms.js":"ebe4","./mt":"1b45","./mt.js":"1b45","./my":"8689","./my.js":"8689","./nb":"6ce3","./nb.js":"6ce3","./ne":"3a39","./ne.js":"3a39","./nl":"facd","./nl-be":"db29","./nl-be.js":"db29","./nl.js":"facd","./nn":"b84c","./nn.js":"b84c","./oc-lnc":"167b","./oc-lnc.js":"167b","./pa-in":"f3ff","./pa-in.js":"f3ff","./pl":"8d57","./pl.js":"8d57","./pt":"f260","./pt-br":"d2d4","./pt-br.js":"d2d4","./pt.js":"f260","./ro":"972c","./ro.js":"972c","./ru":"957c","./ru.js":"957c","./sd":"6784","./sd.js":"6784","./se":"ffff","./se.js":"ffff","./si":"eda5","./si.js":"eda5","./sk":"7be6","./sk.js":"7be6","./sl":"8155","./sl.js":"8155","./sq":"c8f3","./sq.js":"c8f3","./sr":"cf1e","./sr-cyrl":"13e9","./sr-cyrl.js":"13e9","./sr.js":"cf1e","./ss":"52bd","./ss.js":"52bd","./sv":"5fbd","./sv.js":"5fbd","./sw":"74dc","./sw.js":"74dc","./ta":"3de5","./ta.js":"3de5","./te":"5cbb","./te.js":"5cbb","./tet":"576c","./tet.js":"576c","./tg":"3b1b","./tg.js":"3b1b","./th":"10e8","./th.js":"10e8","./tk":"5aff","./tk.js":"5aff","./tl-ph":"0f38","./tl-ph.js":"0f38","./tlh":"cf75","./tlh.js":"cf75","./tr":"0e81","./tr.js":"0e81","./tzl":"cf51","./tzl.js":"cf51","./tzm":"c109","./tzm-latn":"b53d","./tzm-latn.js":"b53d","./tzm.js":"c109","./ug-cn":"6117","./ug-cn.js":"6117","./uk":"ada2","./uk.js":"ada2","./ur":"5294","./ur.js":"5294","./uz":"2e8c","./uz-latn":"010e","./uz-latn.js":"010e","./uz.js":"2e8c","./vi":"2921","./vi.js":"2921","./x-pseudo":"fd7e","./x-pseudo.js":"fd7e","./yo":"7f33","./yo.js":"7f33","./zh-cn":"5c3a","./zh-cn.js":"5c3a","./zh-hk":"49ab","./zh-hk.js":"49ab","./zh-mo":"3a6c","./zh-mo.js":"3a6c","./zh-tw":"90ea","./zh-tw.js":"90ea"};function a(e){var n=o(e);return s(n)}function o(e){if(!s.o(t,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return t[e]}a.keys=function(){return Object.keys(t)},a.resolve=o,e.exports=a,a.id="4678"},"49e3":function(e,n,s){var t=s("ac22");t.__esModule&&(t=t.default),"string"===typeof t&&(t=[[e.i,t,""]]),t.locals&&(e.exports=t.locals);var a=s("499e").default;a("b681cc6e",t,!0,{sourceMap:!1,shadowMode:!1})},"4d3c":function(e,n,s){"use strict";s("4d4c")},"4d4c":function(e,n,s){var t=s("1cd4");t.__esModule&&(t=t.default),"string"===typeof t&&(t=[[e.i,t,""]]),t.locals&&(e.exports=t.locals);var a=s("499e").default;a("fa44f630",t,!0,{sourceMap:!1,shadowMode:!1})},5270:function(e,n,s){var t=s("4445");t.__esModule&&(t=t.default),"string"===typeof t&&(t=[[e.i,t,""]]),t.locals&&(e.exports=t.locals);var a=s("499e").default;a("0411fc40",t,!0,{sourceMap:!1,shadowMode:!1})},6861:function(e,n,s){var t=s("fe3d");t.__esModule&&(t=t.default),"string"===typeof t&&(t=[[e.i,t,""]]),t.locals&&(e.exports=t.locals);var a=s("499e").default;a("63d75f5b",t,!0,{sourceMap:!1,shadowMode:!1})},6913:function(e,n,s){var t=s("24fb");n=t(!1),n.push([e.i,'@font-face{font-family:iconfont;src:url(//at.alicdn.com/t/font_2449547_gb7qdqvmbuu.eot?t=1617200330813);src:url(//at.alicdn.com/t/font_2449547_gb7qdqvmbuu.eot?t=1617200330813#iefix) format("embedded-opentype"),url("data:application/x-font-woff2;charset=utf-8;base64,d09GMgABAAAAAAVQAAsAAAAAChQAAAUEAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHEIGVgCDSAqHBIVaATYCJAMYCw4ABCAFhG0HWRuRCMg+QCa3noPICIOagRA4mxaSBMvtvq/r3SIenvb7du7MvFlRQSNVLJkmk7QJ80qySiS0rViikchk8RD/IJsaNqe/t36hU3MGgVKjp7mIGruJOMadbzTbYKOvq51AC4TZdCzfgoSVpVIE+z+3SJPrwfZ/jqVeJlj+azuXyqRKund0fHS3DWhAUUFFw9l4E5uY7gGe4cIE3k2g0yw/2L6MvDLgpBAOCsQax5LAyeVSYpih3VpDzizihUZ7epbOgef678dvCieSJhOOPHotnQZJ37AXj20HtZ46oyKoywvgdh4ZWwGFeBgaus3WLG1lq/PzF+zsB3Rrl5Rv8azz2dbnni8G/B+XToiFblHdp394SSMTFZm6EXuw3PANk410M44OBc1+KCXx3VNKw48BZrNuqyXu0UlMAxAXgEBZ9mpZloSotWyPSGzfPtCZYth4GpIJLJMImfS6jL7TZTJvPmL29r0L1WofuccajxVnPHCLFR54mNs06TK3MCXu5jnTE/Ur1W0kkpXBmLtsubs79e72nq6qwyI9FWJx7cGDRzWs7yr51XIlOqRSWS6KzNq3b5ebVM5XwiNmSJetm7+7Qu4hl89Rz9mgVqu1ekwzGIy91lBAM1NBwnMX7NmmVE6zK2dhvUo2CFOpZqPcsM/2JsPqOutl0X1Fccw1gTDoOmFsy9MHi3TZtDFrBisqK2YMXjtWVj59EDlGLLggii2pLY/Lz1/3PGPWshXyJWKC+KDs0LXr1/OvP648Wjlz5fLZ0msQKFtmHYbW6YOkdEJCnn+IyDiH27tO+mn6z86veFnbp1tUHxD0iskI79e2Y8fLM2J0R56Mu9dV2zAw5/QN8ekDuTDkyBFU1fhj85it9tJQitzUuvUFAN7cbA/ldmM/8O7Q7+DT9s93zHcN2pXfbs/15hRTUgfg3DvsWhVfQE03LdE/zZpyh1vKfunIR5KCmifl4icepHa9c//BkWvm0b1zcvDW0xjWsVqZar3fv/pox45Dnw8xT9tTV1KWkaX200gwWxcb1qPpxpuO30RA618JRKy/zsnalXtBYk2dmrvrgpzHXNv4xK9Zs9dttPbcOOFzz2lnu5xds2afC/hPPTwj/lM+z33a/2tE+o1s0uVY2qb4boG+vjeSmh6hEmf3KstwYmDHESnddNYSHJ+2p22G2g9t0XQoCUn7Z0G+5Cg/8fWdnZQ0SjlKSc8Ga2jb/D9to7U8JWv1/Z/PagBIb5N4Gu7ly4JVgxvbxn1t79Bc+jpm+RnqaqWA/JRzySy1+qRTp5wqX63gruU9We4TqNZ3VCGhU5zjVIsNuleWZSS1yVltGbEhaTMDWbtlZMFuhUaXbVC12wmdtsg8v8sQga0oHdhsOEDotxGSXh8h63ceWbB3oTHqLVT9YQudTkfHK3ZZDQ5PFSCJIE009yY4ijczkhfhRmMJZLsbScGp1VkVULByWSI4IMhbzYRmKJRxjLUHG4IQQzACbyIy4H7QaOQJi8DrIYUCdAhZYgIDmbAPCqB4E8DtJYBICEQjNOuNwKHwzBh1MYL7fr4ExOrOiCTETPzIVoAEVtzmCcECBKVAZprMqSa2ZXurHlghEITh/RgCngkhAwOQUSzxCJbw3fQgChJAl6NgESOQZjFpTQH1W0xLeQN0El5SI0WOEk3UaFMu8zSUUN2tiDf5z8PNHfvoSLOB5ByNPElzZtYhvZeFNNMAAA==") format("woff2"),url(//at.alicdn.com/t/font_2449547_gb7qdqvmbuu.woff?t=1617200330813) format("woff"),url(//at.alicdn.com/t/font_2449547_gb7qdqvmbuu.ttf?t=1617200330813) format("truetype"),url(//at.alicdn.com/t/font_2449547_gb7qdqvmbuu.svg?t=1617200330813#iconfont) format("svg")}.iconfont{font-family:iconfont!important;font-size:16px;font-style:normal;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.iconcode:before{content:""}.iconcustom-icon:before{content:""}.iconzhankai:before{content:""}.iconloading:before{content:""}.iconExpand:before{content:""}',""]),e.exports=n},"6d81":function(e,n,s){var t=s("24fb"),a=s("6913");n=t(!1),n.i(a),n.push([e.i,".vir-tree{position:relative;display:inline-block;width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.vir-tree-wrap .vir-tree-node{padding:4px 0;line-height:normal;font-size:14px;cursor:pointer;transition:all .2s ease-in-out}.vir-tree-wrap .vir-tree-node:hover{color:#2d8cf0}.vir-tree-wrap .vir-tree-node .node-arrow{display:inline-block;margin-right:4px;cursor:pointer;min-width:16px}.vir-tree-wrap .vir-tree-node .node-arrow .iconfont{display:block}.vir-tree-wrap .vir-tree-node .node-arrow.expanded .iconfont{transform:rotate(90deg)}.vir-tree-wrap .vir-tree-node .node-arrow .ico-loading{-webkit-animation:roundLoading 1s linear infinite;animation:roundLoading 1s linear infinite}.vir-tree-wrap .vir-tree-node .node-content{display:inline-block;vertical-align:top}.vir-tree-wrap .vir-tree-node .node-content .node-title{padding:0 6px;vertical-align:top;color:#515a6e;white-space:nowrap;transition:background-color .2s}.vir-tree-wrap .vir-tree-node .node-content .node-title.selected{background-color:#bae7ff}.vir-tree-wrap .vir-tree-node .node-content .node-title.disabled{cursor:not-allowed;color:#c5c8ce}.vir-tree-wrap .node-selected .node-title{background-color:#d5e8fc}@-webkit-keyframes roundLoading{0%{transform:rotate(0)}to{transform:rotate(1turn)}}@keyframes roundLoading{0%{transform:rotate(0)}to{transform:rotate(1turn)}}",""]),e.exports=n},"74c9":function(e,n,s){var t=s("a3f7");t.__esModule&&(t=t.default),"string"===typeof t&&(t=[[e.i,t,""]]),t.locals&&(e.exports=t.locals);var a=s("499e").default;a("1fa59190",t,!0,{sourceMap:!1,shadowMode:!1})},"7a37":function(e,n,s){"use strict";s("5270")},9384:function(e,n,s){e.exports=s.p+"img/principle.0b61a657.png"},a3f7:function(e,n,s){var t=s("24fb");n=t(!1),n.push([e.i,'.vir-checkbox{display:inline-block;cursor:pointer}.vir-checkbox .inner{display:inline-block;vertical-align:text-bottom;position:relative;top:0;left:0;width:16px;height:16px;direction:ltr;background-color:#fff;border:1px solid #dcdee2;border-radius:2px;border-collapse:initial}.vir-checkbox .inner:after{position:absolute;top:50%;left:50%;width:4px;height:8px;margin-left:-2px;margin-top:-5px;border:2px solid #fff;border-top:0;border-left:0;content:" ";opacity:0;transition:all .2s ease-in-out}.vir-checkbox .content{display:inline-block}.vir-checkbox.half-checked .inner:after{top:50%;left:50%;width:10px;height:10px;background-color:#2d8cf0;border:none;margin:0;transform:translate(-50%,-50%);opacity:1;content:" "}.vir-checkbox.disabled{color:#c5c8ce;cursor:not-allowed}.vir-checkbox.disabled .inner{border-color:#c5c8ce;background-color:#c5c8ce}.vir-checkbox.checked .inner{border-color:#2d8cf0;background-color:#2d8cf0}.vir-checkbox.checked .inner:after{transform:rotate(45deg);opacity:1}',""]),e.exports=n},ac22:function(e,n,s){var t=s("24fb");n=t(!1),n.push([e.i,".doc-container[data-v-67c35ed8]{width:1300px;margin:0 auto;padding:30px 20px;border:1px solid #dcdee2}.doc-container .sec[data-v-67c35ed8]{margin-bottom:10px}.doc-container .sec.mid[data-v-67c35ed8]{margin:10px 0}.doc-container .sec h3[data-v-67c35ed8]{font-size:24px}",""]),e.exports=n},cd49:function(e,n,s){"use strict";s.r(n);s("e260"),s("e6cf"),s("cca6"),s("a79d");var t=s("7a23"),a=Object(t["withScopeId"])("data-v-fcb1caee");Object(t["pushScopeId"])("data-v-fcb1caee");var o=Object(t["createVNode"])("h2",{class:"title"},"Vue virtual tree",-1),r=Object(t["createVNode"])("a",{class:"link",href:"//github.com/lycHub/vue-virtual-tree",target:"_blank"},"github",-1),l=Object(t["createTextVNode"])(" Ant Design ©2018 Created by Ant UED ");Object(t["popScopeId"])();var c=a((function(e,n){var s=Object(t["resolveComponent"])("a-layout-header"),c=Object(t["resolveComponent"])("doc-container"),d=Object(t["resolveComponent"])("a-anchor-link"),i=Object(t["resolveComponent"])("a-anchor"),p=Object(t["resolveComponent"])("a-layout-content"),u=Object(t["resolveComponent"])("a-layout-footer"),h=Object(t["resolveComponent"])("a-layout");return Object(t["openBlock"])(),Object(t["createBlock"])(h,{class:"app-layout"},{default:a((function(){return[Object(t["createVNode"])(s,{class:"header"},{default:a((function(){return[o,r]})),_:1}),Object(t["createVNode"])(p,{class:"content"},{default:a((function(){return[Object(t["createVNode"])(c),Object(t["createVNode"])(i,{class:"anchor"},{default:a((function(){return[Object(t["createVNode"])(d,{href:"#usage",title:"安装使用"}),Object(t["createVNode"])(d,{href:"#base-demo",title:"基本用法"}),Object(t["createVNode"])(d,{href:"#checkbox-demo",title:"可勾选"}),Object(t["createVNode"])(d,{href:"#async-dada-demo",title:"异步加载"}),Object(t["createVNode"])(d,{href:"#custom-node-demo",title:"自定义渲染节点"}),Object(t["createVNode"])(d,{href:"#custom-icon-demo",title:"自定义图标"}),Object(t["createVNode"])(d,{href:"#search-node-demo",title:"搜索树"}),Object(t["createVNode"])(d,{href:"#api",title:"API"})]})),_:1})]})),_:1}),Object(t["createVNode"])(u,{class:"footer"},{default:a((function(){return[l]})),_:1})]})),_:1})})),d=s("9384"),i=s.n(d),p=Object(t["withScopeId"])("data-v-67c35ed8");Object(t["pushScopeId"])("data-v-67c35ed8");var u={class:"doc-container"},h={class:"sec",id:"usage"},f=Object(t["createTextVNode"])("使用说明"),j={class:"install"},b=Object(t["createTextVNode"])("安装"),m=Object(t["createVNode"])("pre",null,"npm i vue-virtual-tree",-1),v={class:"notice"},y=Object(t["createTextVNode"])("必须要传size属性"),g=Object(t["createTextVNode"])(" 由于虚拟组件要监听滚动事件，动态替换node节点，所以需要知道每个节点的高度， 默认size=27，如果您要自定义渲染node或图标，那么务必将真实的size传进来， 另外还有remain属性，控制高度，超出隐藏，默认remain = 8 所以默认的tree.maxHeight = 27 * 8 "),k=Object(t["createVNode"])("img",{src:i.a,alt:"原理"},null,-1),O={class:"custom-view"},N=Object(t["createTextVNode"])("关于自定义样式"),w=Object(t["createTextVNode"])(" 组件已经提供自定义node节点和图标的功能(见下面示例)， 如果还有些样式需要更细致的修改，请自行用css覆盖 "),x={class:"custom-view"},T=Object(t["createTextVNode"])("关于刷新整个tree"),V=Object(t["createTextVNode"])(" 处于性能考虑，tree内部监听 source时，并没有开启 "),C=Object(t["createVNode"])("b",null,"deep",-1),K=Object(t["createTextVNode"])(" 当你只改变source中的某个属性而view并未更新时，"),S=Object(t["createVNode"])("b",null,"可能需要改变source的引用，比如 list.value = list.value.slice()",-1),D={class:"sec mid"},A=Object(t["createTextVNode"])("代码演示"),M={class:"sec",id:"api"},z=Object(t["createTextVNode"])("API"),_=Object(t["createTextVNode"])("Props"),I=Object(t["createVNode"])("br",null,null,-1),E=Object(t["createTextVNode"])("事件"),P=Object(t["createVNode"])("br",null,null,-1),B=Object(t["createTextVNode"])("TreeNodeOptions");Object(t["popScopeId"])();var R=p((function(e,n){var s=Object(t["resolveComponent"])("a-typography-title"),a=Object(t["resolveComponent"])("a-typography-paragraph"),o=Object(t["resolveComponent"])("a-card"),r=Object(t["resolveComponent"])("base-demo"),l=Object(t["resolveComponent"])("demo-box"),c=Object(t["resolveComponent"])("async-data-demo"),d=Object(t["resolveComponent"])("custom-icon-demo"),i=Object(t["resolveComponent"])("a-col"),R=Object(t["resolveComponent"])("checkbox-demo"),U=Object(t["resolveComponent"])("custom-node-demo"),q=Object(t["resolveComponent"])("search-node-demo"),$=Object(t["resolveComponent"])("a-row"),L=Object(t["resolveComponent"])("a-table");return Object(t["openBlock"])(),Object(t["createBlock"])("div",u,[Object(t["createVNode"])("section",h,[Object(t["createVNode"])(s,{level:3},{default:p((function(){return[f]})),_:1}),Object(t["createVNode"])(o,null,{default:p((function(){return[Object(t["createVNode"])("div",j,[Object(t["createVNode"])(s,{level:4},{default:p((function(){return[b]})),_:1}),Object(t["createVNode"])(a,null,{default:p((function(){return[m]})),_:1})]),Object(t["createVNode"])("div",v,[Object(t["createVNode"])(s,{level:4},{default:p((function(){return[y]})),_:1}),Object(t["createVNode"])(a,null,{default:p((function(){return[g]})),_:1}),k]),Object(t["createVNode"])("div",O,[Object(t["createVNode"])(s,{level:4},{default:p((function(){return[N]})),_:1}),Object(t["createVNode"])(a,null,{default:p((function(){return[w]})),_:1})]),Object(t["createVNode"])("div",x,[Object(t["createVNode"])(s,{level:4},{default:p((function(){return[T]})),_:1}),Object(t["createVNode"])(a,null,{default:p((function(){return[V,C,K,S]})),_:1})])]})),_:1})]),Object(t["createVNode"])("section",D,[Object(t["createVNode"])(s,{level:3},{default:p((function(){return[A]})),_:1}),Object(t["createVNode"])($,{gutter:16,class:"demo-boxes"},{default:p((function(){return[Object(t["createVNode"])(i,{span:12},{default:p((function(){return[Object(t["createVNode"])(l,{id:"base-demo",title:"基本用法",desc:"展开、选中、禁用的基本功能aa","code-type":"base"},{default:p((function(){return[Object(t["createVNode"])(r)]})),_:1}),Object(t["createVNode"])(l,{id:"async-dada-demo",title:"异步加载数据",desc:"点击展开节点，动态加载数据。","code-type":"asyncData"},{default:p((function(){return[Object(t["createVNode"])(c)]})),_:1}),Object(t["createVNode"])(l,{id:"custom-icon-demo",title:"自定义图标",desc:"自定义展开、收起图标","code-type":"customIcon"},{default:p((function(){return[Object(t["createVNode"])(d)]})),_:1})]})),_:1}),Object(t["createVNode"])(i,{span:12},{default:p((function(){return[Object(t["createVNode"])(l,{id:"checkbox-demo",title:"可勾选",desc:"showCheckbox属性开启勾选，默认父子节点联动，设置checkStrictly属性，可让父子节点不做联动","code-type":"checkbox"},{default:p((function(){return[Object(t["createVNode"])(R)]})),_:1}),Object(t["createVNode"])(l,{id:"custom-node-demo",title:"自定义渲染节点",desc:"绑定render函数自定义节点，参数data为当前node数据。注意：如果改变了默认的高度(size), 需要传入size属性","code-type":"customNode"},{default:p((function(){return[Object(t["createVNode"])(U)]})),_:1}),Object(t["createVNode"])(l,{id:"search-node-demo",title:"搜索树",desc:"虽然组件内部没有直接提供，但可以配合render自行实现","code-type":"searchNode"},{default:p((function(){return[Object(t["createVNode"])(q)]})),_:1})]})),_:1})]})),_:1})]),Object(t["createVNode"])("section",M,[Object(t["createVNode"])(s,{level:3},{default:p((function(){return[z]})),_:1}),Object(t["createVNode"])(s,{level:4},{default:p((function(){return[_]})),_:1}),Object(t["createVNode"])(L,{columns:e.columns,"data-source":e.propData,rowKey:"argument",pagination:!1},null,8,["columns","data-source"]),I,Object(t["createVNode"])(s,{level:4},{default:p((function(){return[E]})),_:1}),Object(t["createVNode"])(L,{columns:e.columns,"data-source":e.eventData,rowKey:"argument",pagination:!1},null,8,["columns","data-source"]),P,Object(t["createVNode"])(s,{level:4},{default:p((function(){return[B]})),_:1}),Object(t["createVNode"])(L,{columns:e.columns,"data-source":e.nodeOptionData,rowKey:"argument",pagination:!1},null,8,["columns","data-source"])])])})),U=Object(t["withScopeId"])("data-v-2fcb3fd2");Object(t["pushScopeId"])("data-v-2fcb3fd2");var q={class:"demo-box"},$={class:"show"},L={class:"meta"},H={class:"title"},W={class:"desc"},Q={class:"actions"},J=Object(t["createVNode"])("a",null,[Object(t["createVNode"])("i",{class:"iconfont iconcode"})],-1),Z={class:"highlight-wrap"};Object(t["popScopeId"])();var F=U((function(e,n){var s=Object(t["resolveComponent"])("a-tooltip"),a=Object(t["resolveComponent"])("a-typography-paragraph");return Object(t["openBlock"])(),Object(t["createBlock"])("div",q,[Object(t["createVNode"])("div",$,[Object(t["renderSlot"])(e.$slots,"default")]),Object(t["createVNode"])("div",L,[Object(t["createVNode"])("div",H,Object(t["toDisplayString"])(e.title),1),Object(t["createVNode"])("div",W,[Object(t["createVNode"])("p",null,Object(t["toDisplayString"])(e.desc),1)]),Object(t["createVNode"])("div",Q,[Object(t["createVNode"])(s,null,{title:U((function(){return[Object(t["createTextVNode"])(Object(t["toDisplayString"])(e.toggleBtnLabel),1)]})),default:U((function(){return[Object(t["createVNode"])("span",{class:"act",onClick:n[1]||(n[1]=function(){return e.toggleExpand&&e.toggleExpand.apply(e,arguments)})},[J])]})),_:1}),Object(t["createVNode"])(a,{class:"act",style:{display:"inline-block"},copyable:{text:e.preCode.source}},null,8,["copyable"])])]),Object(t["withDirectives"])(Object(t["createVNode"])("div",Z,[Object(t["createVNode"])("div",{class:"highlight",innerHTML:e.preCode.highlight},null,8,["innerHTML"])],512),[[t["vShow"],"收起"===e.toggleBtnLabel]])])})),X=s("e5c6"),G=Object(t["defineComponent"])({name:"DemoBox",props:{title:{type:String,default:""},desc:{type:String,default:""},codeType:{type:String,default:""}},emits:[],setup:function(e,n){n.emit;var s=Object(t["ref"])("展开"),a=Object(t["ref"])(null),o=function(){s.value="展开"===s.value?"收起":"展开"};return a.value=X[e.codeType],{toggleBtnLabel:s,toggleExpand:o,preCode:a}}});s("4d3c");G.render=F,G.__scopeId="data-v-2fcb3fd2";var Y=G,ee={class:"demo"},ne=Object(t["createTextVNode"])("获取选中节点");function se(e,n){var s=Object(t["resolveComponent"])("a-button"),a=Object(t["resolveComponent"])("vir-tree");return Object(t["openBlock"])(),Object(t["createBlock"])("div",ee,[Object(t["createVNode"])(s,{onClick:e.selectedNode},{default:Object(t["withCtx"])((function(){return[ne]})),_:1},8,["onClick"]),Object(t["createVNode"])(a,{ref:"virTree",source:e.list},null,8,["source"])])}s("99af"),s("b0c0");var te=s("e63d"),ae=s.n(te);s("c346");function oe(e){var n=e.getSelectedNode();console.log("selected node",n),n?ae.a.info("选中了".concat(n.name)):ae.a.info("未选中节点")}function re(e){var n=e.getHalfCheckedNodes();console.log("checks",n),ae.a.info("".concat(n.length,"个半选节点"))}function le(e){var n=e.getCheckedNodes();console.log("checks",n),ae.a.info("选中了".concat(n.length,"条数据"))}function ce(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"0",n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3,s=[],t=0;t<10;t+=1){var a="".concat(e,"-").concat(t),o={nodeKey:a,name:a,expanded:!0,children:[],hasChildren:!0,disabled:t%2===0};n>0?o.children=ce(a,n-1):o.hasChildren=!1,s.push(o)}return s}var de=Object(t["defineComponent"])({name:"BaseDemo",setup:function(e,n){n.emit;var s=Object(t["ref"])([]),a=Object(t["ref"])(null);Object(t["onMounted"])((function(){s.value=ce()}));var o=function(){oe(a.value)};return{list:s,virTree:a,selectedNode:o}}});de.render=se;var ie=de,pe=Object(t["withScopeId"])("data-v-10a86b8b");Object(t["pushScopeId"])("data-v-10a86b8b");var ue={class:"demo"},he=Object(t["createVNode"])("h5",null,"默认父子节点联动",-1),fe=Object(t["createTextVNode"])("获取半选节点"),je=Object(t["createVNode"])("h5",null,"父子节点不联动",-1),be=Object(t["createTextVNode"])("获取勾选节点");Object(t["popScopeId"])();var me=pe((function(e,n){var s=Object(t["resolveComponent"])("a-button"),a=Object(t["resolveComponent"])("vir-tree");return Object(t["openBlock"])(),Object(t["createBlock"])("div",ue,[Object(t["createVNode"])("section",null,[he,Object(t["createVNode"])(s,{onClick:e.halfNodes},{default:pe((function(){return[fe]})),_:1},8,["onClick"]),Object(t["createVNode"])(a,{ref:"virTreeOne","show-checkbox":"",source:e.list},null,8,["source"])]),Object(t["createVNode"])("section",null,[je,Object(t["createVNode"])(s,{onClick:e.checkedNodes},{default:pe((function(){return[be]})),_:1},8,["onClick"]),Object(t["createVNode"])(a,{ref:"virTreeTwo","show-checkbox":"","check-strictly":"",source:e.list},null,8,["source"])])])}));function ve(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"0",n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3,s=[],t=0;t<10;t++){var a="".concat(e,"-").concat(t),o={nodeKey:a,name:a,children:[],hasChildren:!0};n>0?o.children=ve(a,n-1):o.hasChildren=!1,s.push(o)}return s}var ye=Object(t["defineComponent"])({name:"CheckboxDemo",setup:function(e,n){n.emit;var s=Object(t["ref"])([]),a=Object(t["ref"])(null),o=Object(t["ref"])(null);Object(t["onMounted"])((function(){s.value=ve()}));var r=function(){re(a.value)},l=function(){le(o.value)};return{list:s,virTreeOne:a,virTreeTwo:o,halfNodes:r,checkedNodes:l}}});s("7a37");ye.render=me,ye.__scopeId="data-v-10a86b8b";var ge=ye,ke={class:"demo"},Oe=Object(t["createTextVNode"])("获取勾选节点");function Ne(e,n){var s=Object(t["resolveComponent"])("a-button"),a=Object(t["resolveComponent"])("vir-tree");return Object(t["openBlock"])(),Object(t["createBlock"])("div",ke,[Object(t["createVNode"])(s,{onClick:e.checkedNodes},{default:Object(t["withCtx"])((function(){return[Oe]})),_:1},8,["onClick"]),Object(t["createVNode"])(a,{ref:"virTree",source:e.list,"show-checkbox":"",loadData:e.loadData},null,8,["source","loadData"])])}function we(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"0",n=[],s=0;s<2;s+=1){var t="".concat(e,"-").concat(s),a={nodeKey:t,name:t,children:[],hasChildren:!0};n.push(a)}return n}var xe=Object(t["defineComponent"])({name:"AsyncDataDemo",setup:function(e,n){n.emit;var s=Object(t["ref"])([]),a=Object(t["ref"])(null);Object(t["onMounted"])((function(){s.value=we()}));var o=function(e,n){console.log("loadData",e);for(var s=[],t=0;t<2;t+=1){var a="".concat(e.nodeKey,"-").concat(t),o={nodeKey:a,name:a,children:[],hasChildren:!0};s.push(o)}setTimeout((function(){n(s)}),500)},r=function(){le(a.value)};return{list:s,virTree:a,loadData:o,checkedNodes:r}}});xe.render=Ne;var Te=xe,Ve={class:"demo"};function Ce(e,n){var s=Object(t["resolveComponent"])("vir-tree");return Object(t["openBlock"])(),Object(t["createBlock"])("div",Ve,[Object(t["createVNode"])(s,{source:e.list,"show-checkbox":"",render:e.renderNode},null,8,["source","render"])])}function Ke(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"0",n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3,s=[],t=0;t<10;t++){var a="".concat(e,"-").concat(t),o={nodeKey:a,name:a,children:[],hasChildren:!0};n>0?o.children=Ke(a,n-1):o.hasChildren=!1,s.push(o)}return s}var Se=Object(t["defineComponent"])({name:"CustomNodeDemo",setup:function(e,n){n.emit;var s=Object(t["ref"])([]);Object(t["onMounted"])((function(){s.value=Ke()}));var a=function(e){return Object(t["createVNode"])("div",{style:"padding: 0 4px;"},[Object(t["createVNode"])("b",{style:"color: #f60;"},[e.name])])};return{list:s,renderNode:a}}});Se.render=Ce;var De=Se,Ae={class:"demo"},Me={key:0,class:"iconfont iconcustom-icon ico-loading"},ze={key:1,class:"iconfont iconzhankai"};function _e(e,n){var s=Object(t["resolveComponent"])("vir-tree");return Object(t["openBlock"])(),Object(t["createBlock"])("div",Ae,[Object(t["createVNode"])(s,{source:e.list,"show-checkbox":"",loadData:e.loadData},{icon:Object(t["withCtx"])((function(e){return[e?(Object(t["openBlock"])(),Object(t["createBlock"])("i",Me)):(Object(t["openBlock"])(),Object(t["createBlock"])("i",ze))]})),_:1},8,["source","loadData"])])}function Ie(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"0",n=[],s=0;s<2;s+=1){var t="".concat(e,"-").concat(s),a={nodeKey:t,name:t,children:[],hasChildren:!0};n.push(a)}return n}var Ee=Object(t["defineComponent"])({name:"CustomIcon",setup:function(e,n){n.emit;var s=Object(t["ref"])([]);Object(t["onMounted"])((function(){s.value=Ie()}));var a=function(e,n){console.log("loadData",e);for(var s=[],t=0;t<2;t+=1){var a="".concat(e.nodeKey,"-").concat(t),o={nodeKey:a,name:a,children:[],hasChildren:!0};s.push(o)}setTimeout((function(){n(s)}),500)};return{list:s,loadData:a}}});Ee.render=_e;var Pe=Ee,Be=(s("841c"),s("ac1f"),{class:"demo"});function Re(e,n){var s=Object(t["resolveComponent"])("a-input"),a=Object(t["resolveComponent"])("vir-tree");return Object(t["openBlock"])(),Object(t["createBlock"])("div",Be,[Object(t["createVNode"])(s,{placeholder:"回车搜索",onPressEnter:e.search},null,8,["onPressEnter"]),Object(t["createVNode"])("section",null,[Object(t["createVNode"])(a,{"show-checkbox":"",source:e.list,render:e.renderNode},null,8,["source","render"])])])}var Ue=s("2909"),qe=s("b85c"),$e=(s("caad"),s("2532"),s("4d63"),s("25f0"),s("5319"),s("6062"),s("d3b7"),s("3ca3"),s("ddb0"),s("0481"),s("d81d"),["##==-open_tag-==##","##==-close_tag-==##"]),Le=[];function He(e){var n=[];if(e){var s=e.parentPath||[];n=s.concat(e.nodeKey)}return n}function We(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"0",n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,t=[],a=0;a<10;a++){var o="".concat(e,"-").concat(a),r={nodeKey:o,name:o,children:[],hasChildren:!0,expanded:Le.includes(o),parentPath:He(s)};n>0?r.children=We(o,n-1,r):r.hasChildren=!1,t.push(r)}return t}var Qe=Object(t["defineComponent"])({name:"SearchNodeDemo",setup:function(e,n){n.emit;var s=Object(t["ref"])(""),a=Object(t["ref"])([]);Object(t["onMounted"])((function(){a.value=We()}));var o=function(e){return new RegExp(e.replace(/([.*+?^=!:${}()|[\]\/\\])/g,"\\$&"),"i")},r=function(e){var n=[],s=function s(t){var a,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,l=Object(qe["a"])(t);try{for(l.s();!(a=l.n()).done;){var c,d=a.value,i=o(e).test(d.name);i&&n.push(d),r&&(r.expanded=i),null!==(c=d.children)&&void 0!==c&&c.length&&s(d.children,d)}}catch(p){l.e(p)}finally{l.f()}};return e&&s(a.value),n},l=function(e){s.value=e.target.value;var n=r(s.value);n.length&&(Le=Object(Ue["a"])(new Set(n.map((function(e){return e.parentPath})).flat())),a.value=We())},c=function(e,n){if(n){var s=e.replace(o(n),"".concat($e[0],"$&").concat($e[1]));return s.replace(new RegExp($e[0],"g"),'<span style="color: #ff2041;">').replace(new RegExp($e[1],"g"),"</span>")}return e},d=function(e){var n=c(e.name,s.value);return Object(t["createVNode"])("div",{style:"padding: 0 4px;",innerHTML:n},null)};return{list:a,search:l,renderNode:d}}});Qe.render=Re;var Je=Qe,Ze=[{title:"参数",dataIndex:"argument"},{title:"说明",dataIndex:"description"},{title:"类型",dataIndex:"type"},{title:"默认值",dataIndex:"defaultValue"}],Fe=[{argument:"size",description:"用于虚拟计算，每个节点的高度",type:"number",defaultValue:27},{argument:"remain",description:"用于虚拟计算，可视区内显示多少个节点",type:"number",defaultValue:8},{argument:"source",description:"数据源",type:"TreeNodeOptions[]",defaultValue:"[]"},{argument:"showCheckbox",description:"勾选模式",type:"boolean",defaultValue:"false"},{argument:"checkStrictly",description:"勾选时，父子不联动",type:"boolean",defaultValue:"false"},{argument:"loadData",description:"异步加载",type:"(node: TreeNodeOptions, callback: (children: TreeNodeOptions[]) => void) => void",defaultValue:"undefined"},{argument:"render",description:"自定义渲染节点",type:"() => JSX.Element",defaultValue:"undefined"}],Xe=[{argument:"getSelectedNode",description:"获取选中的节点",type:"() => TreeNodeOptions | undefined;"},{argument:"getCheckedNodes",description:"获取已勾选的节点",type:"() => TreeNodeOptions;"},{argument:"getHalfCheckedNodes",description:"获取半勾选的节点",type:"() => TreeNodeOptions;"}],Ge=[{argument:"nodeKey",description:"必传，节点的唯一标识",type:"string | number"},{argument:"name",description:"必传，显示的节点名称",type:"string"},{argument:"hasChildren",description:"必传，用于判断是否还有children，控制展开图标的显示",type:"boolean"},{argument:"level",description:"层级，内部计算",type:"number"},{argument:"loading",description:"是否正在加载数据",type:"boolean",defaultValue:"false"},{argument:"disabled",description:"是否禁用",type:"boolean",defaultValue:"false"},{argument:"expanded",description:"是否展开",type:"boolean",defaultValue:"false"},{argument:"selected",description:"是否选中",type:"boolean",defaultValue:"false"},{argument:"checked",description:"是否勾选",type:"boolean",defaultValue:"false"},{argument:"children",description:"子集",type:"TreeNodeOptions[]",defaultValue:"[]"},{argument:"parentKey",description:"父节点的nodeKey, 组件内部自动设置",type:"string | number | null",defaultValue:"null"}],Ye=Object(t["defineComponent"])({name:"DocContainer",components:{DemoBox:Y,BaseDemo:ie,CheckboxDemo:ge,AsyncDataDemo:Te,CustomNodeDemo:De,CustomIconDemo:Pe,SearchNodeDemo:Je},setup:function(e,n){n.emit;return{propData:Fe,eventData:Xe,nodeOptionData:Ge,columns:Ze}}});s("f066");Ye.render=R,Ye.__scopeId="data-v-67c35ed8";var en=Ye,nn=Object(t["defineComponent"])({components:{DocContainer:en},setup:function(){return{selectedKeys:Object(t["ref"])(["2"])}}});s("003e");nn.render=c,nn.__scopeId="data-v-fcb1caee";var sn=nn,tn=(s("159b"),s("c4c6")),an=s.n(tn),on=(s("95d1"),s("990d")),rn=s.n(on),ln=(s("e542"),s("a086")),cn=s.n(ln),dn=(s("387f"),s("257f")),pn=s.n(dn),un=(s("12eb"),s("fed8")),hn=s.n(un),fn=(s("0c4c"),s("edb7")),jn=s.n(fn),bn=(s("aa11"),s("623e")),mn=s.n(bn),vn=(s("4730"),s("c218")),yn=s.n(vn),gn=(s("e3e7"),s("d4df")),kn=s.n(gn),On=(s("bd94"),s("57df")),Nn=s.n(On),wn=(s("1325"),s("9456")),xn=s.n(wn),Tn=(s("5785"),[an.a,rn.a,cn.a,pn.a,hn.a,jn.a,mn.a,yn.a,kn.a,Nn.a,xn.a]),Vn=function(e){Tn.forEach((function(n){return e.use(n)}))},Cn=s("3835"),Kn=(s("a9e3"),s("c740"),s("a434"),s("4de4"),s("7db0"),s("cd3f")),Sn=s.n(Kn),Dn=s("5530");function An(e){var n=[];function s(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;return e.map((function(e){var o,r=Object(Dn["a"])(Object(Dn["a"])({},e),{},{level:t,loading:!1,disabled:e.disabled||!1,expand:e.expanded||!1,selected:e.selected||!1,checked:e.checked||(null===a||void 0===a?void 0:a.checked)||!1,hasChildren:e.hasChildren||!1,parentKey:(null===a||void 0===a?void 0:a.nodeKey)||null});return n.push(r),e.expanded&&null!==(o=e.children)&&void 0!==o&&o.length?r.children=s(e.children,t+1,r):r.children=r.children||[],r}))}return s(e),n}function Mn(e,n){var s=function n(s){s.length&&s.forEach((function(s){var t;s.checked=e,null!==(t=s.children)&&void 0!==t&&t.length&&n(s.children)}))};s(n.children)}function zn(e,n){var s=function e(s){if(null!=s.parentKey){var t=n.find((function(e){return e.nodeKey==s.parentKey})),a=!t.children.some((function(e){return!e.checked}));a!==t.checked&&(t.checked=a,e(t))}};s(e)}s("74c9");var _n=Object(t["defineComponent"])({name:"VirCheckbox",props:{modelValue:{type:Boolean,default:!1},disabled:{type:Boolean,default:!1},halfChecked:{type:Boolean,default:!1}},emits:["update:modelValue","change"],setup:function(e,n){var s=n.emit,a=n.slots,o=Object(t["computed"])((function(){var n="vir-checkbox";return e.modelValue?n+=" checked":e.halfChecked&&(n+=" half-checked"),e.disabled&&(n+=" disabled"),n})),r=function(){e.disabled||(s("update:modelValue",!e.modelValue),s("change",!e.modelValue))};return function(){return Object(t["createVNode"])("div",{class:o.value,onClick:r},[Object(t["createVNode"])("div",{class:"inner"},null),Object(t["createVNode"])("div",{class:"content"},[a.default&&a.default()])])}}}),In=Object(t["defineComponent"])({name:"RenderNode",props:{node:{type:Object,required:!0},render:{type:Function,required:!0}},setup:function(e){return function(){return e.render(e.node)}}}),En=Object(t["defineComponent"])({name:"VirTreeNode",props:{node:{type:Object,required:!0},iconSlot:Function,showCheckbox:{type:Boolean,default:!1},checkStrictly:{type:Boolean,default:!1},render:Function},emits:["select-change","toggle-expand","check-change"],setup:function(e,n){var s=n.emit,a=n.expose,o=Object(t["computed"])((function(){var n=!1;if(!e.checkStrictly&&e.node.hasChildren){var s=e.node.children,t=s.filter((function(e){return e.checked}));n=t.length>0&&t.length<s.length}return n})),r=Object(t["computed"])((function(){var n="node-title";return e.node.selected&&(n+=" selected"),e.node.disabled&&(n+=" disabled"),n})),l=function(){e.node.disabled||s("select-change",e.node)},c=function(){s("toggle-expand",e.node)},d=function(n){s("check-change",[n,e.node])},i=function(){return Object(t["createVNode"])("div",{class:["node-arrow",e.node.expanded?"expanded":""],onClick:c},[e.node.hasChildren?e.iconSlot?e.iconSlot(e.node.loading):e.node.loading?Object(t["createVNode"])("i",{class:"iconfont iconloading ico-loading"},null):Object(t["createVNode"])("i",{class:"iconfont iconExpand"},null):null])},p=function(){return e.showCheckbox?Object(t["createVNode"])(_n,{class:"node-content node-check-box",disabled:e.node.disabled,modelValue:e.node.checked,halfChecked:o.value,onChange:d},{default:function(){return[e.render?Object(t["createVNode"])(In,{render:e.render,node:e.node},null):Object(t["createVNode"])("span",{class:"node-title"},[e.node.name])]}}):Object(t["createVNode"])("div",{class:"node-content node-text",onClick:l},[e.render?Object(t["createVNode"])(In,{render:e.render,node:e.node},null):Object(t["createVNode"])("span",{class:r.value},[e.node.name])])};return a({rawNode:e.node,halfChecked:function(){return o.value}}),function(){return Object(t["createVNode"])("div",{class:"vir-tree-node",style:{paddingLeft:18*e.node.level+"px"}},[i(),p()])}}}),Pn=Object(t["defineComponent"])({name:"VirtualList",props:{list:{type:Array,default:function(){return[]}},customForOf:{type:Boolean,default:!1},size:{type:Number,required:!0},remain:{type:Number,required:!0},start:{type:Number,default:0},offset:{type:Number,default:0},additional:{type:Number,default:0},dataKey:{type:String,default:"id"}},emits:["update:modelValue","range"],setup:function(e,n){var s=n.emit,a=n.slots,o=Object(t["ref"])(null),r=Object(t["markRaw"])({start:0,end:0,scrollTop:0,paddingTop:0,paddingBottom:0}),l=Object(t["ref"])([]),c=Object(t["computed"])((function(){return e.remain+(e.additional||e.remain)})),d=Object(t["computed"])((function(){return e.size*e.remain})),i=function(n){var s=n+c.value-1;return e.list.length?Math.min(e.list.length-1,s):s},p=function(n){var s=Math.max(0,n),t=e.list.length-c.value,a=s>=t;return a&&(s=Math.max(0,t)),{start:s,end:i(s),isLastZone:a}},u=function(){var n=e.list.length,s=n>c.value,t=e.size*(s?r.start:0),a=e.size*(s?n-c.value:0)-t;a<e.size&&(a=0),r.paddingTop=t,r.paddingBottom=a},h=function(){if(e.list.length){for(var n=[],s=r.start;s<=r.end;s++)n.push(e.list[s]);return n}return[]},f=function(){e.customForOf?s("range",{start:r.start,end:r.end}):l.value=h()},j=function(n){var s=arguments.length>1&&void 0!==arguments[1]&&arguments[1],t=Math.floor(n/e.size),a=p(t),o=e.additional||e.remain,l=!1;s||t<r.start?l=!0:a.isLastZone?r.start===a.start&&r.end===a.end||(l=!0):l=t>=r.start+o,l&&(r.start=a.start,r.end=a.end,u(),f())},b=function(){var n=arguments.length>0&&void 0!==arguments[0]&&arguments[0];r.start=n&&e.list.length>r.start+c.value?e.start:0,r.end=i(r.start),u(),f()},m=function(){e.list.length>c.value?j(o.value.scrollTop):b()},v=function(e){o.value.scrollTop=e};Object(t["watch"])((function(){return e.list}),(function(n){e.list.length>c.value?j(o.value.scrollTop,!0):b()}),{deep:!0}),Object(t["onMounted"])((function(){if(e.list.length&&b(!0),e.start){var n=p(e.start).start;v(n*e.size)}else e.offset&&v(e.offset)}));var y=function(){return e.customForOf?a.default():l.value.map((function(n,s){return Object(t["createVNode"])("div",{key:n[e.dataKey]},[a.default({item:n,index:r.start+s})])}))};return function(){return Object(t["createVNode"])("div",{class:"vir-list",ref:o,onScroll:m,style:{maxHeight:d.value+"px",overflowY:"auto"}},[Object(t["createVNode"])("div",{class:"main-box",style:{paddingTop:r.paddingTop+"px",paddingBottom:r.paddingBottom+"px"}},[y()])])}}}),Bn=(s("039a"),Object(t["defineComponent"])({name:"VirTree",props:{source:{type:Array,default:function(){return[]}},showCheckbox:{type:Boolean,default:!1},checkStrictly:{type:Boolean,default:!1},size:{type:Number,default:27},remain:{type:Number,default:8},loadData:Function,render:Function},emits:["selectChange","checkChange"],setup:function(e,n){var s=n.emit,a=n.slots,o=n.expose,r=Object(t["shallowRef"])(!1),l=Object(t["ref"])(""),c=Object(t["ref"])([]);Object(t["watch"])((function(){return e.source}),(function(e){c.value=An(e)}),{immediate:!0});var d=function(e){if(e.selected=!e.selected,l.value!==e.nodeKey){var n=c.value.findIndex((function(e){return e.nodeKey===l.value}));n>-1&&(c.value[n].selected=!1),e.selected=!0,l.value=e.nodeKey,s("selectChange",e)}},i=function(n){var t=Object(Cn["a"])(n,2),a=t[0],o=t[1];o.checked=a,e.checkStrictly||(Mn(a,o),zn(o,c.value)),s("checkChange",o)},p=function(e){var n,s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],t=s.length?s:Sn()(e.children);e.children=t.map((function(n){var s;return n.loading=!1,n.level=n.level||e.level+1,n.disabled=n.disabled||!1,n.selected=n.selected||!1,n.expanded=n.expanded||!1,n.checked=null!==(s=n.checked)&&void 0!==s?s:e.checked,n.children=n.children||[],n.hasChildren=n.hasChildren||!1,n.parentKey=e.nodeKey||null,n}));var a=c.value.findIndex((function(n){return n.nodeKey===e.nodeKey}));(n=c.value).splice.apply(n,[a+1,0].concat(Object(Ue["a"])(e.children)))},u=function(e){var n=[],s=function e(s){var t;null!==(t=s.children)&&void 0!==t&&t.length&&s.children.forEach((function(s){n.push(s.nodeKey),s.expanded&&(s.expanded=!1,e(s))}))};s(e),n.length&&(c.value=c.value.filter((function(e){return!n.includes(e.nodeKey)})))},h=function(n){var s;r.value||(n.expanded=!n.expanded,n.expanded?null!==(s=n.children)&&void 0!==s&&s.length?p(n):e.loadData&&(n.loading=!0,r.value=!0,e.loadData(n,(function(e){n.loading=!1,r.value=!1,e.length&&p(n,e)}))):u(n))},f=Object(t["ref"])([]),j=function(e,n){n&&(f.value[e]=n)};return o({getSelectedNode:function(){return c.value.find((function(e){return e.selected}))},getCheckedNodes:function(){return c.value.filter((function(e){return e.checked}))},getHalfCheckedNodes:function(){return f.value.filter((function(e){return e.halfChecked()})).map((function(e){return e.rawNode}))}}),function(){return Object(t["createVNode"])("div",{class:"vir-tree"},[Object(t["h"])(Pn,{class:["vir-tree-wrap"],size:e.size,remain:e.remain,list:c.value,dataKey:"nodeKey"},{default:function(n){return Object(t["h"])(En,{ref:j.bind(null,n.index),node:n.item,showCheckbox:e.showCheckbox,checkStrictly:e.checkStrictly,iconSlot:a.icon,render:e.render,onSelectChange:d,onToggleExpand:h,onCheckChange:i})}})])}}})),Rn=function(e){e.component(Bn.name,Bn)};s("6861");Object(t["createApp"])(sn).use(Vn).use(Rn).mount("#app")},d5cb:function(e,n,s){var t=s("24fb");n=t(!1),n.push([e.i,".hljs{display:block;overflow-x:auto;padding:.5em;color:#333;background:#f8f8f8}.hljs-comment,.hljs-quote{color:#998;font-style:italic}.hljs-keyword,.hljs-selector-tag,.hljs-subst{color:#333;font-weight:700}.hljs-literal,.hljs-number,.hljs-tag .hljs-attr,.hljs-template-variable,.hljs-variable{color:teal}.hljs-doctag,.hljs-string{color:#d14}.hljs-section,.hljs-selector-id,.hljs-title{color:#900;font-weight:700}.hljs-subst{font-weight:400}.hljs-class .hljs-title,.hljs-type{color:#458;font-weight:700}.hljs-attribute,.hljs-name,.hljs-tag{color:navy;font-weight:400}.hljs-link,.hljs-regexp{color:#009926}.hljs-bullet,.hljs-symbol{color:#990073}.hljs-built_in,.hljs-builtin-name{color:#0086b3}.hljs-meta{color:#999;font-weight:700}.hljs-deletion{background:#fdd}.hljs-addition{background:#dfd}.hljs-emphasis{font-style:italic}.hljs-strong{font-weight:700}",""]),e.exports=n},e31f:function(e,n,s){var t=s("24fb");n=t(!1),n.push([e.i,".app-layout .header[data-v-fcb1caee]{display:flex;align-items:center;color:#fff;height:64px}.app-layout .header .title[data-v-fcb1caee]{color:inherit;margin:0}.app-layout .header .link[data-v-fcb1caee]{margin-left:20px;font-size:16px}.app-layout .content[data-v-fcb1caee]{position:relative;min-height:calc(100vh - 128px);background-color:#fff}.app-layout .content .anchor[data-v-fcb1caee]{position:absolute;right:50px;top:30px}.app-layout .footer[data-v-fcb1caee]{text-align:center}",""]),e.exports=n},e5c6:function(e){e.exports=JSON.parse('{"base":{"source":"<template>\\n  <div class=\\"demo\\">\\n    <button @click=\\"selectedNode\\">获取选中节点</button>\\n    <vir-tree ref=\\"virTree\\" :source=\\"list\\" />\\n  </div>\\n</template>\\n\\n<script lang=\\"tsx\\">\\n  import {defineComponent, onMounted, ref} from \'vue\';\\n  import { VirTree } from \\"vue-virtual-tree\\";\\n  import {TreeInstance, TreeNodeOptions} from \\"vue-virtual-tree/typings/VirtualTree/types\\";\\n\\n  function recursion(path = \'0\', level = 3): TreeNodeOptions[] {\\n    const list = [];\\n    for (let i = 0; i < 10; i += 1) {\\n      const nodeKey = `${path}-${i}`;\\n      const treeNode: TreeNodeOptions  = {\\n        nodeKey,\\n        name: nodeKey,\\n        expanded: true,\\n        children: [],\\n        hasChildren: true,\\n        disabled: i % 2 === 0\\n      };\\n\\n      if (level > 0) {\\n        treeNode.children = recursion(nodeKey, level - 1);\\n      } else {\\n        treeNode.hasChildren = false;\\n      }\\n\\n      list.push(treeNode);\\n    }\\n    return list;\\n  }\\n\\n  export default defineComponent({\\n    name: \'BaseDemo\',\\n    components: { VirTree },\\n    setup(prop, {emit}) {\\n      const list = ref<TreeNodeOptions[]>([]);\\n      const virTree = ref<TreeInstance | null>(null);\\n      onMounted(() => {\\n        list.value = recursion();\\n      });\\n      const selectedNode = () => {\\n        const node = virTree.value!.getSelectedNode();\\n        console.log(\'selected node\', node);\\n      }\\n      return {\\n        list,\\n        virTree,\\n        selectedNode\\n      }\\n    }\\n  });\\n<\/script>\\n","highlight":"<pre class=\'hljs\'><code>&lt;<span class=\\"hljs-keyword\\">template</span>&gt;\\n  &lt;<span class=\\"hljs-keyword\\">div</span> class=<span class=\\"hljs-string\\">\\"demo\\"</span>&gt;\\n    &lt;button @click=<span class=\\"hljs-string\\">\\"selectedNode\\"</span>&gt;获取选中节点&lt;/button&gt;\\n    &lt;vir-tree <span class=\\"hljs-keyword\\">ref</span>=<span class=\\"hljs-string\\">\\"virTree\\"</span> :source=<span class=\\"hljs-string\\">\\"list\\"</span> /&gt;\\n  &lt;/<span class=\\"hljs-keyword\\">div</span>&gt;\\n&lt;/<span class=\\"hljs-keyword\\">template</span>&gt;\\n\\n&lt;script lang=<span class=\\"hljs-string\\">\\"tsx\\"</span>&gt;\\n  <span class=\\"hljs-keyword\\">import</span> {defineComponent, onMounted, <span class=\\"hljs-keyword\\">ref</span>} <span class=\\"hljs-keyword\\">from</span> \'vue\';\\n  <span class=\\"hljs-keyword\\">import</span> { <span class=\\"hljs-type\\">VirTree</span> } <span class=\\"hljs-keyword\\">from</span> <span class=\\"hljs-string\\">\\"vue-virtual-tree\\"</span>;\\n  <span class=\\"hljs-keyword\\">import</span> {<span class=\\"hljs-type\\">TreeInstance</span>, <span class=\\"hljs-type\\">TreeNodeOptions</span>} <span class=\\"hljs-keyword\\">from</span> <span class=\\"hljs-string\\">\\"vue-virtual-tree/typings/VirtualTree/types\\"</span>;\\n\\n  function recursion(path = \'<span class=\\"hljs-number\\">0</span>\', level = <span class=\\"hljs-number\\">3</span>): <span class=\\"hljs-type\\">TreeNodeOptions</span>[] {\\n    <span class=\\"hljs-keyword\\">const</span> list = [];\\n    <span class=\\"hljs-keyword\\">for</span> (<span class=\\"hljs-keyword\\">let</span> i = <span class=\\"hljs-number\\">0</span>; i &lt; <span class=\\"hljs-number\\">10</span>; i += <span class=\\"hljs-number\\">1</span>) {\\n      <span class=\\"hljs-keyword\\">const</span> nodeKey = `${path}-${i}`;\\n      <span class=\\"hljs-keyword\\">const</span> treeNode: <span class=\\"hljs-type\\">TreeNodeOptions</span>  = {\\n        nodeKey,\\n        name: nodeKey,\\n        expanded: <span class=\\"hljs-literal\\">true</span>,\\n        children: [],\\n        hasChildren: <span class=\\"hljs-literal\\">true</span>,\\n        disabled: i % <span class=\\"hljs-number\\">2</span> === <span class=\\"hljs-number\\">0</span>\\n      };\\n\\n      <span class=\\"hljs-keyword\\">if</span> (level &gt; <span class=\\"hljs-number\\">0</span>) {\\n        treeNode.children = recursion(nodeKey, level - <span class=\\"hljs-number\\">1</span>);\\n      } <span class=\\"hljs-keyword\\">else</span> {\\n        treeNode.hasChildren = <span class=\\"hljs-literal\\">false</span>;\\n      }\\n\\n      list.push(treeNode);\\n    }\\n    <span class=\\"hljs-keyword\\">return</span> list;\\n  }\\n\\n  <span class=\\"hljs-keyword\\">export</span> default defineComponent({\\n    name: \'<span class=\\"hljs-type\\">BaseDemo</span>\',\\n    components: { <span class=\\"hljs-type\\">VirTree</span> },\\n    setup(prop, {emit}) {\\n      <span class=\\"hljs-keyword\\">const</span> list = <span class=\\"hljs-keyword\\">ref</span>&lt;<span class=\\"hljs-type\\">TreeNodeOptions</span>[]&gt;([]);\\n      <span class=\\"hljs-keyword\\">const</span> virTree = <span class=\\"hljs-keyword\\">ref</span>&lt;<span class=\\"hljs-type\\">TreeInstance</span> | null&gt;(null);\\n      onMounted(() =&gt; {\\n        list.value = recursion();\\n      });\\n      <span class=\\"hljs-keyword\\">const</span> selectedNode = () =&gt; {\\n        <span class=\\"hljs-keyword\\">const</span> node = virTree.value!.getSelectedNode();\\n        console.log(\'selected node\', node);\\n      }\\n      <span class=\\"hljs-keyword\\">return</span> {\\n        list,\\n        virTree,\\n        selectedNode\\n      }\\n    }\\n  });\\n&lt;/script&gt;\\n</code></pre>"},"checkbox":{"source":"<template>\\n  <div class=\\"demo\\">\\n    <section>\\n      <h5>默认父子节点联动</h5>\\n      <button @click=\\"halfNodes\\">获取半选节点</button>\\n      <vir-tree ref=\\"virTreeOne\\" show-checkbox :source=\\"list\\" />\\n    </section>\\n    <section>\\n      <h5>父子节点不联动</h5>\\n      <button @click=\\"checkedNodes\\">获取勾选节点</button>\\n      <vir-tree ref=\\"virTreeTwo\\" show-checkbox check-strictly :source=\\"list\\" />\\n    </section>\\n  </div>\\n</template>\\n\\n<script lang=\\"tsx\\">\\n  import {defineComponent, onMounted, ref} from \'vue\';\\n  import { VirTree } from \\"vue-virtual-tree\\";\\n  import {TreeInstance, TreeNodeOptions} from \\"vue-virtual-tree/typings/VirtualTree/types\\";\\n\\n  function recursion(path = \'0\', level = 3): TreeNodeOptions[] {\\n    const list = [];\\n    for (let i = 0; i < 10; i++) {\\n      const nodeKey = `${path}-${i}`;\\n      const treeNode: TreeNodeOptions = {\\n        nodeKey,\\n        name: nodeKey,\\n        children: [],\\n        hasChildren: true\\n      };\\n\\n      if (level > 0) {\\n        treeNode.children = recursion(nodeKey, level - 1);\\n      } else {\\n        treeNode.hasChildren = false;\\n      }\\n\\n      list.push(treeNode);\\n    }\\n    return list;\\n  }\\n\\n  export default defineComponent({\\n    name: \'CheckboxDemo\',\\n    setup(prop, {emit}) {\\n      const list = ref<TreeNodeOptions[]>([]);\\n      const virTreeOne = ref<TreeInstance | null>(null);\\n      const virTreeTwo = ref<TreeInstance | null>(null);\\n      onMounted(() => {\\n        list.value = recursion();\\n      });\\n      const halfNodes = () => {\\n        const checks = virTreeOne.value!.getHalfCheckedNodes();\\n        console.log(\'checks\', checks);\\n      }\\n      const checkedNodes = () => {\\n        const checks = virTreeTwo.value.getCheckedNodes();\\n        console.log(\'checks\', checks);\\n      }\\n      return {\\n        list,\\n        virTreeOne,\\n        virTreeTwo,\\n        halfNodes,\\n        checkedNodes\\n      }\\n    }\\n  });\\n<\/script>\\n","highlight":"<pre class=\'hljs\'><code>&lt;<span class=\\"hljs-keyword\\">template</span>&gt;\\n  &lt;<span class=\\"hljs-keyword\\">div</span> class=<span class=\\"hljs-string\\">\\"demo\\"</span>&gt;\\n    &lt;section&gt;\\n      &lt;h5&gt;默认父子节点联动&lt;/h5&gt;\\n      &lt;button @click=<span class=\\"hljs-string\\">\\"halfNodes\\"</span>&gt;获取半选节点&lt;/button&gt;\\n      &lt;vir-tree <span class=\\"hljs-keyword\\">ref</span>=<span class=\\"hljs-string\\">\\"virTreeOne\\"</span> show-checkbox :source=<span class=\\"hljs-string\\">\\"list\\"</span> /&gt;\\n    &lt;/section&gt;\\n    &lt;section&gt;\\n      &lt;h5&gt;父子节点不联动&lt;/h5&gt;\\n      &lt;button @click=<span class=\\"hljs-string\\">\\"checkedNodes\\"</span>&gt;获取勾选节点&lt;/button&gt;\\n      &lt;vir-tree <span class=\\"hljs-keyword\\">ref</span>=<span class=\\"hljs-string\\">\\"virTreeTwo\\"</span> show-checkbox check-strictly :source=<span class=\\"hljs-string\\">\\"list\\"</span> /&gt;\\n    &lt;/section&gt;\\n  &lt;/<span class=\\"hljs-keyword\\">div</span>&gt;\\n&lt;/<span class=\\"hljs-keyword\\">template</span>&gt;\\n\\n&lt;script lang=<span class=\\"hljs-string\\">\\"tsx\\"</span>&gt;\\n  <span class=\\"hljs-keyword\\">import</span> {defineComponent, onMounted, <span class=\\"hljs-keyword\\">ref</span>} <span class=\\"hljs-keyword\\">from</span> \'vue\';\\n  <span class=\\"hljs-keyword\\">import</span> { <span class=\\"hljs-type\\">VirTree</span> } <span class=\\"hljs-keyword\\">from</span> <span class=\\"hljs-string\\">\\"vue-virtual-tree\\"</span>;\\n  <span class=\\"hljs-keyword\\">import</span> {<span class=\\"hljs-type\\">TreeInstance</span>, <span class=\\"hljs-type\\">TreeNodeOptions</span>} <span class=\\"hljs-keyword\\">from</span> <span class=\\"hljs-string\\">\\"vue-virtual-tree/typings/VirtualTree/types\\"</span>;\\n\\n  function recursion(path = \'<span class=\\"hljs-number\\">0</span>\', level = <span class=\\"hljs-number\\">3</span>): <span class=\\"hljs-type\\">TreeNodeOptions</span>[] {\\n    <span class=\\"hljs-keyword\\">const</span> list = [];\\n    <span class=\\"hljs-keyword\\">for</span> (<span class=\\"hljs-keyword\\">let</span> i = <span class=\\"hljs-number\\">0</span>; i &lt; <span class=\\"hljs-number\\">10</span>; i++) {\\n      <span class=\\"hljs-keyword\\">const</span> nodeKey = `${path}-${i}`;\\n      <span class=\\"hljs-keyword\\">const</span> treeNode: <span class=\\"hljs-type\\">TreeNodeOptions</span> = {\\n        nodeKey,\\n        name: nodeKey,\\n        children: [],\\n        hasChildren: <span class=\\"hljs-literal\\">true</span>\\n      };\\n\\n      <span class=\\"hljs-keyword\\">if</span> (level &gt; <span class=\\"hljs-number\\">0</span>) {\\n        treeNode.children = recursion(nodeKey, level - <span class=\\"hljs-number\\">1</span>);\\n      } <span class=\\"hljs-keyword\\">else</span> {\\n        treeNode.hasChildren = <span class=\\"hljs-literal\\">false</span>;\\n      }\\n\\n      list.push(treeNode);\\n    }\\n    <span class=\\"hljs-keyword\\">return</span> list;\\n  }\\n\\n  <span class=\\"hljs-keyword\\">export</span> default defineComponent({\\n    name: \'<span class=\\"hljs-type\\">CheckboxDemo</span>\',\\n    setup(prop, {emit}) {\\n      <span class=\\"hljs-keyword\\">const</span> list = <span class=\\"hljs-keyword\\">ref</span>&lt;<span class=\\"hljs-type\\">TreeNodeOptions</span>[]&gt;([]);\\n      <span class=\\"hljs-keyword\\">const</span> virTreeOne = <span class=\\"hljs-keyword\\">ref</span>&lt;<span class=\\"hljs-type\\">TreeInstance</span> | null&gt;(null);\\n      <span class=\\"hljs-keyword\\">const</span> virTreeTwo = <span class=\\"hljs-keyword\\">ref</span>&lt;<span class=\\"hljs-type\\">TreeInstance</span> | null&gt;(null);\\n      onMounted(() =&gt; {\\n        list.value = recursion();\\n      });\\n      <span class=\\"hljs-keyword\\">const</span> halfNodes = () =&gt; {\\n        <span class=\\"hljs-keyword\\">const</span> checks = virTreeOne.value!.getHalfCheckedNodes();\\n        console.log(\'checks\', checks);\\n      }\\n      <span class=\\"hljs-keyword\\">const</span> checkedNodes = () =&gt; {\\n        <span class=\\"hljs-keyword\\">const</span> checks = virTreeTwo.value.getCheckedNodes();\\n        console.log(\'checks\', checks);\\n      }\\n      <span class=\\"hljs-keyword\\">return</span> {\\n        list,\\n        virTreeOne,\\n        virTreeTwo,\\n        halfNodes,\\n        checkedNodes\\n      }\\n    }\\n  });\\n&lt;/script&gt;\\n</code></pre>"},"asyncData":{"source":"<template>\\n  <div class=\\"demo\\">\\n    <button @click=\\"checkedNodes\\">获取勾选节点</button>\\n    <vir-tree ref=\\"virTree\\" :source=\\"list\\" show-checkbox :loadData=\\"loadData\\" />\\n  </div>\\n</template>\\n\\n<script lang=\\"tsx\\">\\n  import {defineComponent, onMounted, ref} from \'vue\';\\n  import { VirTree } from \\"vue-virtual-tree\\";\\n  import {TreeInstance, TreeNodeOptions} from \\"vue-virtual-tree/typings/VirtualTree/types\\";\\n\\n  function recursion(path = \'0\'): TreeNodeOptions[] {\\n    const list = [];\\n    for (let i = 0; i < 2; i += 1) {\\n      const nodeKey = `${path}-${i}`;\\n      const treeNode: TreeNodeOptions  = {\\n        nodeKey,\\n        name: nodeKey,\\n        children: [],\\n        hasChildren: true\\n      };\\n      list.push(treeNode);\\n    }\\n    return list;\\n  }\\n\\n  export default defineComponent({\\n    name: \'AsyncDataDemo\',\\n    components: { VirTree },\\n    setup(prop, {emit}) {\\n      const list = ref<TreeNodeOptions[]>([]);\\n      const virTree = ref<TreeInstance | null>(null);\\n      onMounted(() => {\\n        list.value = recursion();\\n      });\\n      const loadData = (node: TreeNodeOptions, callback: (children: TreeNodeOptions[]) => void) => {\\n        console.log(\'loadData\', node);\\n        const result: TreeNodeOptions[] = [];\\n        for (let i = 0; i < 2; i += 1) {\\n          const nodeKey = `${node.nodeKey}-${i}`;\\n          const treeNode: TreeNodeOptions  = {\\n            nodeKey,\\n            name: nodeKey,\\n            children: [],\\n            hasChildren: true\\n          };\\n          result.push(treeNode);\\n        }\\n        setTimeout(() => {\\n          callback(result);\\n        }, 500);\\n      }\\n      const checkedNodes = () => {\\n        const checks = virTree.value!.getCheckedNodes();\\n        console.log(\'checks\', checks);\\n      }\\n      return {\\n        list,\\n        virTree,\\n        loadData,\\n        checkedNodes\\n      }\\n    }\\n  });\\n<\/script>\\n","highlight":"<pre class=\'hljs\'><code>&lt;<span class=\\"hljs-keyword\\">template</span>&gt;\\n  &lt;<span class=\\"hljs-keyword\\">div</span> class=<span class=\\"hljs-string\\">\\"demo\\"</span>&gt;\\n    &lt;button @click=<span class=\\"hljs-string\\">\\"checkedNodes\\"</span>&gt;获取勾选节点&lt;/button&gt;\\n    &lt;vir-tree <span class=\\"hljs-keyword\\">ref</span>=<span class=\\"hljs-string\\">\\"virTree\\"</span> :source=<span class=\\"hljs-string\\">\\"list\\"</span> show-checkbox :loadData=<span class=\\"hljs-string\\">\\"loadData\\"</span> /&gt;\\n  &lt;/<span class=\\"hljs-keyword\\">div</span>&gt;\\n&lt;/<span class=\\"hljs-keyword\\">template</span>&gt;\\n\\n&lt;script lang=<span class=\\"hljs-string\\">\\"tsx\\"</span>&gt;\\n  <span class=\\"hljs-keyword\\">import</span> {defineComponent, onMounted, <span class=\\"hljs-keyword\\">ref</span>} <span class=\\"hljs-keyword\\">from</span> \'vue\';\\n  <span class=\\"hljs-keyword\\">import</span> { <span class=\\"hljs-type\\">VirTree</span> } <span class=\\"hljs-keyword\\">from</span> <span class=\\"hljs-string\\">\\"vue-virtual-tree\\"</span>;\\n  <span class=\\"hljs-keyword\\">import</span> {<span class=\\"hljs-type\\">TreeInstance</span>, <span class=\\"hljs-type\\">TreeNodeOptions</span>} <span class=\\"hljs-keyword\\">from</span> <span class=\\"hljs-string\\">\\"vue-virtual-tree/typings/VirtualTree/types\\"</span>;\\n\\n  function recursion(path = \'<span class=\\"hljs-number\\">0</span>\'): <span class=\\"hljs-type\\">TreeNodeOptions</span>[] {\\n    <span class=\\"hljs-keyword\\">const</span> list = [];\\n    <span class=\\"hljs-keyword\\">for</span> (<span class=\\"hljs-keyword\\">let</span> i = <span class=\\"hljs-number\\">0</span>; i &lt; <span class=\\"hljs-number\\">2</span>; i += <span class=\\"hljs-number\\">1</span>) {\\n      <span class=\\"hljs-keyword\\">const</span> nodeKey = `${path}-${i}`;\\n      <span class=\\"hljs-keyword\\">const</span> treeNode: <span class=\\"hljs-type\\">TreeNodeOptions</span>  = {\\n        nodeKey,\\n        name: nodeKey,\\n        children: [],\\n        hasChildren: <span class=\\"hljs-literal\\">true</span>\\n      };\\n      list.push(treeNode);\\n    }\\n    <span class=\\"hljs-keyword\\">return</span> list;\\n  }\\n\\n  <span class=\\"hljs-keyword\\">export</span> default defineComponent({\\n    name: \'<span class=\\"hljs-type\\">AsyncDataDemo</span>\',\\n    components: { <span class=\\"hljs-type\\">VirTree</span> },\\n    setup(prop, {emit}) {\\n      <span class=\\"hljs-keyword\\">const</span> list = <span class=\\"hljs-keyword\\">ref</span>&lt;<span class=\\"hljs-type\\">TreeNodeOptions</span>[]&gt;([]);\\n      <span class=\\"hljs-keyword\\">const</span> virTree = <span class=\\"hljs-keyword\\">ref</span>&lt;<span class=\\"hljs-type\\">TreeInstance</span> | null&gt;(null);\\n      onMounted(() =&gt; {\\n        list.value = recursion();\\n      });\\n      <span class=\\"hljs-keyword\\">const</span> loadData = (node: <span class=\\"hljs-type\\">TreeNodeOptions</span>, callback: (children: <span class=\\"hljs-type\\">TreeNodeOptions</span>[]) =&gt; <span class=\\"hljs-type\\">void</span>) =&gt; {\\n        console.log(\'loadData\', node);\\n        <span class=\\"hljs-keyword\\">const</span> <span class=\\"hljs-literal\\">result</span>: <span class=\\"hljs-type\\">TreeNodeOptions</span>[] = [];\\n        <span class=\\"hljs-keyword\\">for</span> (<span class=\\"hljs-keyword\\">let</span> i = <span class=\\"hljs-number\\">0</span>; i &lt; <span class=\\"hljs-number\\">2</span>; i += <span class=\\"hljs-number\\">1</span>) {\\n          <span class=\\"hljs-keyword\\">const</span> nodeKey = `${node.nodeKey}-${i}`;\\n          <span class=\\"hljs-keyword\\">const</span> treeNode: <span class=\\"hljs-type\\">TreeNodeOptions</span>  = {\\n            nodeKey,\\n            name: nodeKey,\\n            children: [],\\n            hasChildren: <span class=\\"hljs-literal\\">true</span>\\n          };\\n          <span class=\\"hljs-literal\\">result</span>.push(treeNode);\\n        }\\n        setTimeout(() =&gt; {\\n          callback(<span class=\\"hljs-literal\\">result</span>);\\n        }, <span class=\\"hljs-number\\">500</span>);\\n      }\\n      <span class=\\"hljs-keyword\\">const</span> checkedNodes = () =&gt; {\\n        <span class=\\"hljs-keyword\\">const</span> checks = virTree.value!.getCheckedNodes();\\n        console.log(\'checks\', checks);\\n      }\\n      <span class=\\"hljs-keyword\\">return</span> {\\n        list,\\n        virTree,\\n        loadData,\\n        checkedNodes\\n      }\\n    }\\n  });\\n&lt;/script&gt;\\n</code></pre>"},"customNode":{"source":"<template>\\n  <div class=\\"demo\\">\\n    <vir-tree :source=\\"list\\" show-checkbox :render=\\"renderNode\\" />\\n  </div>\\n</template>\\n\\n<script lang=\\"tsx\\">\\n  import {defineComponent, onMounted, ref} from \'vue\';\\n  import { VirTree } from \\"vue-virtual-tree\\";\\n  import {TreeInstance, TreeNodeOptions} from \\"vue-virtual-tree/typings/VirtualTree/types\\";\\n\\n  function recursion(path = \'0\', level = 3): TreeNodeOptions[] {\\n    const list = [];\\n    for (let i = 0; i < 10; i++) {\\n      const nodeKey = `${path}-${i}`;\\n      const treeNode: TreeNodeOptions = {\\n        nodeKey,\\n        name: nodeKey,\\n        children: [],\\n        hasChildren: true\\n      };\\n\\n      if (level > 0) {\\n        treeNode.children = recursion(nodeKey, level - 1);\\n      } else {\\n        treeNode.hasChildren = false;\\n      }\\n\\n      list.push(treeNode);\\n    }\\n    return list;\\n  }\\n\\n  export default defineComponent({\\n    name: \'CustomNodeDemo\',\\n    setup(prop, {emit}) {\\n      const list = ref<TreeNodeOptions[]>([]);\\n      onMounted(() => {\\n        list.value = recursion();\\n      });\\n      const renderNode = (node: TreeNodeOptions) => {\\n        return <div style=\\"padding: 0 4px;\\"><b style=\\"color: #f60;\\">{ node.name }</b></div>\\n      }\\n      return {\\n        list,\\n        renderNode\\n      }\\n    }\\n  });\\n<\/script>\\n","highlight":"<pre class=\'hljs\'><code>&lt;<span class=\\"hljs-keyword\\">template</span>&gt;\\n  &lt;<span class=\\"hljs-keyword\\">div</span> class=<span class=\\"hljs-string\\">\\"demo\\"</span>&gt;\\n    &lt;vir-tree :source=<span class=\\"hljs-string\\">\\"list\\"</span> show-checkbox :render=<span class=\\"hljs-string\\">\\"renderNode\\"</span> /&gt;\\n  &lt;/<span class=\\"hljs-keyword\\">div</span>&gt;\\n&lt;/<span class=\\"hljs-keyword\\">template</span>&gt;\\n\\n&lt;script lang=<span class=\\"hljs-string\\">\\"tsx\\"</span>&gt;\\n  <span class=\\"hljs-keyword\\">import</span> {defineComponent, onMounted, <span class=\\"hljs-keyword\\">ref</span>} <span class=\\"hljs-keyword\\">from</span> \'vue\';\\n  <span class=\\"hljs-keyword\\">import</span> { <span class=\\"hljs-type\\">VirTree</span> } <span class=\\"hljs-keyword\\">from</span> <span class=\\"hljs-string\\">\\"vue-virtual-tree\\"</span>;\\n  <span class=\\"hljs-keyword\\">import</span> {<span class=\\"hljs-type\\">TreeInstance</span>, <span class=\\"hljs-type\\">TreeNodeOptions</span>} <span class=\\"hljs-keyword\\">from</span> <span class=\\"hljs-string\\">\\"vue-virtual-tree/typings/VirtualTree/types\\"</span>;\\n\\n  function recursion(path = \'<span class=\\"hljs-number\\">0</span>\', level = <span class=\\"hljs-number\\">3</span>): <span class=\\"hljs-type\\">TreeNodeOptions</span>[] {\\n    <span class=\\"hljs-keyword\\">const</span> list = [];\\n    <span class=\\"hljs-keyword\\">for</span> (<span class=\\"hljs-keyword\\">let</span> i = <span class=\\"hljs-number\\">0</span>; i &lt; <span class=\\"hljs-number\\">10</span>; i++) {\\n      <span class=\\"hljs-keyword\\">const</span> nodeKey = `${path}-${i}`;\\n      <span class=\\"hljs-keyword\\">const</span> treeNode: <span class=\\"hljs-type\\">TreeNodeOptions</span> = {\\n        nodeKey,\\n        name: nodeKey,\\n        children: [],\\n        hasChildren: <span class=\\"hljs-literal\\">true</span>\\n      };\\n\\n      <span class=\\"hljs-keyword\\">if</span> (level &gt; <span class=\\"hljs-number\\">0</span>) {\\n        treeNode.children = recursion(nodeKey, level - <span class=\\"hljs-number\\">1</span>);\\n      } <span class=\\"hljs-keyword\\">else</span> {\\n        treeNode.hasChildren = <span class=\\"hljs-literal\\">false</span>;\\n      }\\n\\n      list.push(treeNode);\\n    }\\n    <span class=\\"hljs-keyword\\">return</span> list;\\n  }\\n\\n  <span class=\\"hljs-keyword\\">export</span> default defineComponent({\\n    name: \'<span class=\\"hljs-type\\">CustomNodeDemo</span>\',\\n    setup(prop, {emit}) {\\n      <span class=\\"hljs-keyword\\">const</span> list = <span class=\\"hljs-keyword\\">ref</span>&lt;<span class=\\"hljs-type\\">TreeNodeOptions</span>[]&gt;([]);\\n      onMounted(() =&gt; {\\n        list.value = recursion();\\n      });\\n      <span class=\\"hljs-keyword\\">const</span> renderNode = (node: <span class=\\"hljs-type\\">TreeNodeOptions</span>) =&gt; {\\n        <span class=\\"hljs-keyword\\">return</span> &lt;<span class=\\"hljs-keyword\\">div</span> style=<span class=\\"hljs-string\\">\\"padding: 0 4px;\\"</span>&gt;&lt;b style=<span class=\\"hljs-string\\">\\"color: #f60;\\"</span>&gt;{ node.name }&lt;/b&gt;&lt;/<span class=\\"hljs-keyword\\">div</span>&gt;\\n      }\\n      <span class=\\"hljs-keyword\\">return</span> {\\n        list,\\n        renderNode\\n      }\\n    }\\n  });\\n&lt;/script&gt;"},"customIcon":{"source":"<template>\\n  <div class=\\"demo\\">\\n    <vir-tree :source=\\"list\\" show-checkbox :loadData=\\"loadData\\">\\n      <template #icon=\\"loading\\">\\n        <i v-if=\\"loading\\" class=\\"iconfont iconcustom-icon ico-loading\\"></i>\\n        <i v-else class=\\"iconfont iconzhankai\\"></i>\\n      </template>\\n    </vir-tree>\\n  </div>\\n</template>\\n\\n<script lang=\\"tsx\\">\\nimport {defineComponent, onMounted, ref} from \'vue\';\\nimport { VirTree } from \\"vue-virtual-tree\\";\\nimport { TreeNodeOptions } from \\"vue-virtual-tree/typings/VirtualTree/types\\";\\n\\nfunction recursion(path = \'0\'): TreeNodeOptions[] {\\n  const list = [];\\n  for (let i = 0; i < 2; i += 1) {\\n    const nodeKey = `${path}-${i}`;\\n    const treeNode: TreeNodeOptions  = {\\n      nodeKey,\\n      name: nodeKey,\\n      children: [],\\n      hasChildren: true\\n    };\\n    list.push(treeNode);\\n  }\\n  return list;\\n}\\n\\nexport default defineComponent({\\n  name: \'CustomIcon\',\\n  setup(prop, {emit}) {\\n    const list = ref<TreeNodeOptions[]>([]);\\n    onMounted(() => {\\n      list.value = recursion();\\n    });\\n    const loadData = (node: TreeNodeOptions, callback: (children: TreeNodeOptions[]) => void) => {\\n      console.log(\'loadData\', node);\\n      const result: TreeNodeOptions[] = [];\\n      for (let i = 0; i < 2; i += 1) {\\n        const nodeKey = `${node.nodeKey}-${i}`;\\n        const treeNode: TreeNodeOptions  = {\\n          nodeKey,\\n          name: nodeKey,\\n          children: [],\\n          hasChildren: true\\n        };\\n        result.push(treeNode);\\n      }\\n      setTimeout(() => {\\n        callback(result);\\n      }, 500);\\n    }\\n    return {\\n      list,\\n      loadData\\n    }\\n  }\\n});\\n<\/script>\\n","highlight":"<pre class=\'hljs\'><code>&lt;<span class=\\"hljs-keyword\\">template</span>&gt;\\n  &lt;<span class=\\"hljs-keyword\\">div</span> class=<span class=\\"hljs-string\\">\\"demo\\"</span>&gt;\\n    &lt;vir-tree :source=<span class=\\"hljs-string\\">\\"list\\"</span> show-checkbox :loadData=<span class=\\"hljs-string\\">\\"loadData\\"</span>&gt;\\n      &lt;<span class=\\"hljs-keyword\\">template</span> <span class=\\"hljs-comment\\">#icon=\\"loading\\"&gt;</span>\\n        &lt;i v-<span class=\\"hljs-keyword\\">if</span>=<span class=\\"hljs-string\\">\\"loading\\"</span> class=<span class=\\"hljs-string\\">\\"iconfont iconcustom-icon ico-loading\\"</span>&gt;&lt;/i&gt;\\n        &lt;i v-<span class=\\"hljs-keyword\\">else</span> class=<span class=\\"hljs-string\\">\\"iconfont iconzhankai\\"</span>&gt;&lt;/i&gt;\\n      &lt;/<span class=\\"hljs-keyword\\">template</span>&gt;\\n    &lt;/vir-tree&gt;\\n  &lt;/<span class=\\"hljs-keyword\\">div</span>&gt;\\n&lt;/<span class=\\"hljs-keyword\\">template</span>&gt;\\n\\n&lt;script lang=<span class=\\"hljs-string\\">\\"tsx\\"</span>&gt;\\n<span class=\\"hljs-keyword\\">import</span> {defineComponent, onMounted, <span class=\\"hljs-keyword\\">ref</span>} <span class=\\"hljs-keyword\\">from</span> \'vue\';\\n<span class=\\"hljs-keyword\\">import</span> { <span class=\\"hljs-type\\">VirTree</span> } <span class=\\"hljs-keyword\\">from</span> <span class=\\"hljs-string\\">\\"vue-virtual-tree\\"</span>;\\n<span class=\\"hljs-keyword\\">import</span> { <span class=\\"hljs-type\\">TreeNodeOptions</span> } <span class=\\"hljs-keyword\\">from</span> <span class=\\"hljs-string\\">\\"vue-virtual-tree/typings/VirtualTree/types\\"</span>;\\n\\nfunction recursion(path = \'<span class=\\"hljs-number\\">0</span>\'): <span class=\\"hljs-type\\">TreeNodeOptions</span>[] {\\n  <span class=\\"hljs-keyword\\">const</span> list = [];\\n  <span class=\\"hljs-keyword\\">for</span> (<span class=\\"hljs-keyword\\">let</span> i = <span class=\\"hljs-number\\">0</span>; i &lt; <span class=\\"hljs-number\\">2</span>; i += <span class=\\"hljs-number\\">1</span>) {\\n    <span class=\\"hljs-keyword\\">const</span> nodeKey = `${path}-${i}`;\\n    <span class=\\"hljs-keyword\\">const</span> treeNode: <span class=\\"hljs-type\\">TreeNodeOptions</span>  = {\\n      nodeKey,\\n      name: nodeKey,\\n      children: [],\\n      hasChildren: <span class=\\"hljs-literal\\">true</span>\\n    };\\n    list.push(treeNode);\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> list;\\n}\\n\\n<span class=\\"hljs-keyword\\">export</span> default defineComponent({\\n  name: \'<span class=\\"hljs-type\\">CustomIcon</span>\',\\n  setup(prop, {emit}) {\\n    <span class=\\"hljs-keyword\\">const</span> list = <span class=\\"hljs-keyword\\">ref</span>&lt;<span class=\\"hljs-type\\">TreeNodeOptions</span>[]&gt;([]);\\n    onMounted(() =&gt; {\\n      list.value = recursion();\\n    });\\n    <span class=\\"hljs-keyword\\">const</span> loadData = (node: <span class=\\"hljs-type\\">TreeNodeOptions</span>, callback: (children: <span class=\\"hljs-type\\">TreeNodeOptions</span>[]) =&gt; <span class=\\"hljs-type\\">void</span>) =&gt; {\\n      console.log(\'loadData\', node);\\n      <span class=\\"hljs-keyword\\">const</span> <span class=\\"hljs-literal\\">result</span>: <span class=\\"hljs-type\\">TreeNodeOptions</span>[] = [];\\n      <span class=\\"hljs-keyword\\">for</span> (<span class=\\"hljs-keyword\\">let</span> i = <span class=\\"hljs-number\\">0</span>; i &lt; <span class=\\"hljs-number\\">2</span>; i += <span class=\\"hljs-number\\">1</span>) {\\n        <span class=\\"hljs-keyword\\">const</span> nodeKey = `${node.nodeKey}-${i}`;\\n        <span class=\\"hljs-keyword\\">const</span> treeNode: <span class=\\"hljs-type\\">TreeNodeOptions</span>  = {\\n          nodeKey,\\n          name: nodeKey,\\n          children: [],\\n          hasChildren: <span class=\\"hljs-literal\\">true</span>\\n        };\\n        <span class=\\"hljs-literal\\">result</span>.push(treeNode);\\n      }\\n      setTimeout(() =&gt; {\\n        callback(<span class=\\"hljs-literal\\">result</span>);\\n      }, <span class=\\"hljs-number\\">500</span>);\\n    }\\n    <span class=\\"hljs-keyword\\">return</span> {\\n      list,\\n      loadData\\n    }\\n  }\\n});\\n&lt;/script&gt;\\n</code></pre>"},"searchNode":{"source":"<template>\\n  <div class=\\"demo\\">\\n    <input placeholder=\\"回车搜索\\" @keyup.enter=\\"search\\" />\\n    <section>\\n      <vir-tree show-checkbox :source=\\"list\\" :render=\\"renderNode\\" />\\n    </section>\\n  </div>\\n</template>\\n\\n<script lang=\\"tsx\\">\\n  import {defineComponent, onMounted, ref} from \'vue\';\\n  import { VirTree } from \\"vue-virtual-tree\\";\\n  import { TreeNodeOptions } from \\"vue-virtual-tree/typings/VirtualTree/types\\";\\n  const UNIQUE_WRAPPERS = [\'##==-open_tag-==##\', \'##==-close_tag-==##\'];\\n  let expandKeys: Array<string | number> = [];\\n  function getParentPath (parent: TreeNodeOptions | null): Array<string | number> {\\n    let result = [];\\n    if (parent) {\\n      const base = parent.parentPath || [];\\n      result = base.concat(parent.nodeKey);\\n    }\\n    return result;\\n  }\\n  function recursion(path = \'0\', level = 3, parent: TreeNodeOptions | null = null): TreeNodeOptions[] {\\n    const list = [];\\n    for (let i = 0; i < 10; i++) {\\n      const nodeKey = `${path}-${i}`;\\n      const treeNode: TreeNodeOptions = {\\n        nodeKey,\\n        name: nodeKey,\\n        children: [],\\n        hasChildren: true,\\n        expanded: expandKeys.includes(nodeKey),\\n        parentPath: getParentPath(parent)\\n      };\\n\\n      if (level > 0) {\\n        treeNode.children = recursion(nodeKey, level - 1, treeNode);\\n      } else {\\n        treeNode.hasChildren = false;\\n      }\\n\\n      list.push(treeNode);\\n    }\\n    return list;\\n  }\\n\\n  export default defineComponent({\\n    name: \'SearchNodeDemo\',\\n    setup(prop, {emit}) {\\n      const keywords = ref(\'\');\\n      const list = ref<TreeNodeOptions[]>([]);\\n\\n      onMounted(() => {\\n        list.value = recursion();\\n        // console.log(\'list\', list.value);\\n      });\\n      const formatSearchValue = (value: string) => {\\n        return new RegExp(value.replace(/([.*+?^=!:${}()|[\\\\]\\\\/\\\\\\\\])/g, \'\\\\\\\\$&\'), \'i\');\\n      }\\n      const findMatchedNodes = (keywords: string): TreeNodeOptions[] => {\\n        const result: TreeNodeOptions[] = [];\\n        const recursion = (list: TreeNodeOptions[], parent: TreeNodeOptions | null = null) => {\\n          for (const item of list) {\\n            const matched = formatSearchValue(keywords).test(item.name);\\n            if (matched) {\\n              result.push(item);\\n            }\\n            if (parent) {\\n              parent.expanded = matched;\\n            }\\n            if (item.children?.length) {\\n              recursion(item.children, item);\\n            }\\n          }\\n        }\\n        if (keywords) {\\n          recursion(list.value);\\n        }\\n        return result;\\n      }\\n      const search = (event: KeyboardEvent) => {\\n        keywords.value = (event.target as HTMLInputElement).value;\\n        const matchedNodes = findMatchedNodes(keywords.value);\\n        if (matchedNodes.length) {\\n          // 取出parentPath > 拍扁 > 去重\\n          expandKeys = [...new Set(matchedNodes.map(item => item.parentPath).flat())];\\n          list.value = recursion();\\n        }\\n      }\\n\\n      const transform = (value: string, matchValue: string) => {\\n        if (matchValue) {\\n          const wrapValue = value.replace(formatSearchValue(matchValue), `${UNIQUE_WRAPPERS[0]}$&${UNIQUE_WRAPPERS[1]}`);\\n          return wrapValue\\n            .replace(new RegExp(UNIQUE_WRAPPERS[0], \'g\'), \'<span style=\\"color: #ff2041;\\">\')\\n            .replace(new RegExp(UNIQUE_WRAPPERS[1], \'g\'), \'</span>\');\\n        }\\n        return value;\\n      }\\n      const renderNode = (node: TreeNodeOptions) => {\\n        const content = transform(node.name, keywords.value);\\n        return <div style=\\"padding: 0 4px;\\" innerHTML={ content } />;\\n      }\\n      return {\\n        list,\\n        search,\\n        renderNode\\n      }\\n    }\\n  });\\n<\/script>\\n","highlight":"<pre class=\'hljs\'><code>&lt;<span class=\\"hljs-keyword\\">template</span>&gt;\\n  &lt;<span class=\\"hljs-keyword\\">div</span> class=<span class=\\"hljs-string\\">\\"demo\\"</span>&gt;\\n    &lt;input placeholder=<span class=\\"hljs-string\\">\\"回车搜索\\"</span> @keyup.enter=<span class=\\"hljs-string\\">\\"search\\"</span> /&gt;\\n    &lt;section&gt;\\n      &lt;vir-tree show-checkbox :source=<span class=\\"hljs-string\\">\\"list\\"</span> :render=<span class=\\"hljs-string\\">\\"renderNode\\"</span> /&gt;\\n    &lt;/section&gt;\\n  &lt;/<span class=\\"hljs-keyword\\">div</span>&gt;\\n&lt;/<span class=\\"hljs-keyword\\">template</span>&gt;\\n\\n&lt;script lang=<span class=\\"hljs-string\\">\\"tsx\\"</span>&gt;\\n  <span class=\\"hljs-keyword\\">import</span> {defineComponent, onMounted, <span class=\\"hljs-keyword\\">ref</span>} <span class=\\"hljs-keyword\\">from</span> \'vue\';\\n  <span class=\\"hljs-keyword\\">import</span> { <span class=\\"hljs-type\\">VirTree</span> } <span class=\\"hljs-keyword\\">from</span> <span class=\\"hljs-string\\">\\"vue-virtual-tree\\"</span>;\\n  <span class=\\"hljs-keyword\\">import</span> { <span class=\\"hljs-type\\">TreeNodeOptions</span> } <span class=\\"hljs-keyword\\">from</span> <span class=\\"hljs-string\\">\\"vue-virtual-tree/typings/VirtualTree/types\\"</span>;\\n  <span class=\\"hljs-keyword\\">const</span> <span class=\\"hljs-type\\">UNIQUE_WRAPPERS</span> = [\'<span class=\\"hljs-comment\\">##==-open_tag-==##\', \'##==-close_tag-==##\'];</span>\\n  <span class=\\"hljs-keyword\\">let</span> expandKeys: <span class=\\"hljs-type\\">Array</span>&lt;<span class=\\"hljs-type\\">string</span> | number&gt; = [];\\n  function getParentPath (parent: <span class=\\"hljs-type\\">TreeNodeOptions</span> | null): <span class=\\"hljs-type\\">Array</span>&lt;<span class=\\"hljs-type\\">string</span> | number&gt; {\\n    <span class=\\"hljs-keyword\\">let</span> <span class=\\"hljs-literal\\">result</span> = [];\\n    <span class=\\"hljs-keyword\\">if</span> (parent) {\\n      <span class=\\"hljs-keyword\\">const</span> base = parent.parentPath || [];\\n      <span class=\\"hljs-literal\\">result</span> = base.concat(parent.nodeKey);\\n    }\\n    <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">result</span>;\\n  }\\n  function recursion(path = \'<span class=\\"hljs-number\\">0</span>\', level = <span class=\\"hljs-number\\">3</span>, parent: <span class=\\"hljs-type\\">TreeNodeOptions</span> | null = null): <span class=\\"hljs-type\\">TreeNodeOptions</span>[] {\\n    <span class=\\"hljs-keyword\\">const</span> list = [];\\n    <span class=\\"hljs-keyword\\">for</span> (<span class=\\"hljs-keyword\\">let</span> i = <span class=\\"hljs-number\\">0</span>; i &lt; <span class=\\"hljs-number\\">10</span>; i++) {\\n      <span class=\\"hljs-keyword\\">const</span> nodeKey = `${path}-${i}`;\\n      <span class=\\"hljs-keyword\\">const</span> treeNode: <span class=\\"hljs-type\\">TreeNodeOptions</span> = {\\n        nodeKey,\\n        name: nodeKey,\\n        children: [],\\n        hasChildren: <span class=\\"hljs-literal\\">true</span>,\\n        expanded: expandKeys.includes(nodeKey),\\n        parentPath: getParentPath(parent)\\n      };\\n\\n      <span class=\\"hljs-keyword\\">if</span> (level &gt; <span class=\\"hljs-number\\">0</span>) {\\n        treeNode.children = recursion(nodeKey, level - <span class=\\"hljs-number\\">1</span>, treeNode);\\n      } <span class=\\"hljs-keyword\\">else</span> {\\n        treeNode.hasChildren = <span class=\\"hljs-literal\\">false</span>;\\n      }\\n\\n      list.push(treeNode);\\n    }\\n    <span class=\\"hljs-keyword\\">return</span> list;\\n  }\\n\\n  <span class=\\"hljs-keyword\\">export</span> default defineComponent({\\n    name: \'<span class=\\"hljs-type\\">SearchNodeDemo</span>\',\\n    setup(prop, {emit}) {\\n      <span class=\\"hljs-keyword\\">const</span> keywords = <span class=\\"hljs-keyword\\">ref</span>(\'\');\\n      <span class=\\"hljs-keyword\\">const</span> list = <span class=\\"hljs-keyword\\">ref</span>&lt;<span class=\\"hljs-type\\">TreeNodeOptions</span>[]&gt;([]);\\n\\n      onMounted(() =&gt; {\\n        list.value = recursion();\\n        // console.log(\'list\', list.value);\\n      });\\n      <span class=\\"hljs-keyword\\">const</span> formatSearchValue = (value: <span class=\\"hljs-type\\">string</span>) =&gt; {\\n        <span class=\\"hljs-keyword\\">return</span> new <span class=\\"hljs-type\\">RegExp</span>(value.replace(/([.*+?^=!:${}()|[\\\\]\\\\/\\\\\\\\])/g, \'\\\\\\\\$&amp;\'), \'i\');\\n      }\\n      <span class=\\"hljs-keyword\\">const</span> findMatchedNodes = (keywords: <span class=\\"hljs-type\\">string</span>): <span class=\\"hljs-type\\">TreeNodeOptions</span>[] =&gt; {\\n        <span class=\\"hljs-keyword\\">const</span> <span class=\\"hljs-literal\\">result</span>: <span class=\\"hljs-type\\">TreeNodeOptions</span>[] = [];\\n        <span class=\\"hljs-keyword\\">const</span> recursion = (list: <span class=\\"hljs-type\\">TreeNodeOptions</span>[], parent: <span class=\\"hljs-type\\">TreeNodeOptions</span> | null = null) =&gt; {\\n          <span class=\\"hljs-keyword\\">for</span> (<span class=\\"hljs-keyword\\">const</span> item <span class=\\"hljs-keyword\\">of</span> list) {\\n            <span class=\\"hljs-keyword\\">const</span> matched = formatSearchValue(keywords).test(item.name);\\n            <span class=\\"hljs-keyword\\">if</span> (matched) {\\n              <span class=\\"hljs-literal\\">result</span>.push(item);\\n            }\\n            <span class=\\"hljs-keyword\\">if</span> (parent) {\\n              parent.expanded = matched;\\n            }\\n            <span class=\\"hljs-keyword\\">if</span> (item.children?.length) {\\n              recursion(item.children, item);\\n            }\\n          }\\n        }\\n        <span class=\\"hljs-keyword\\">if</span> (keywords) {\\n          recursion(list.value);\\n        }\\n        <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">result</span>;\\n      }\\n      <span class=\\"hljs-keyword\\">const</span> search = (event: <span class=\\"hljs-type\\">KeyboardEvent</span>) =&gt; {\\n        keywords.value = (event.target <span class=\\"hljs-keyword\\">as</span> <span class=\\"hljs-type\\">HTMLInputElement</span>).value;\\n        <span class=\\"hljs-keyword\\">const</span> matchedNodes = findMatchedNodes(keywords.value);\\n        <span class=\\"hljs-keyword\\">if</span> (matchedNodes.length) {\\n          // 取出parentPath &gt; 拍扁 &gt; 去重\\n          expandKeys = [...new <span class=\\"hljs-type\\">Set</span>(matchedNodes.map(item =&gt; item.parentPath).flat())];\\n          list.value = recursion();\\n        }\\n      }\\n\\n      <span class=\\"hljs-keyword\\">const</span> transform = (value: <span class=\\"hljs-type\\">string</span>, matchValue: <span class=\\"hljs-type\\">string</span>) =&gt; {\\n        <span class=\\"hljs-keyword\\">if</span> (matchValue) {\\n          <span class=\\"hljs-keyword\\">const</span> wrapValue = value.replace(formatSearchValue(matchValue), `${<span class=\\"hljs-type\\">UNIQUE_WRAPPERS</span>[<span class=\\"hljs-number\\">0</span>]}$&amp;${<span class=\\"hljs-type\\">UNIQUE_WRAPPERS</span>[<span class=\\"hljs-number\\">1</span>]}`);\\n          <span class=\\"hljs-keyword\\">return</span> wrapValue\\n            .replace(new <span class=\\"hljs-type\\">RegExp</span>(<span class=\\"hljs-type\\">UNIQUE_WRAPPERS</span>[<span class=\\"hljs-number\\">0</span>], \'g\'), \'&lt;span style=<span class=\\"hljs-string\\">\\"color: #ff2041;\\"</span>&gt;\')\\n            .replace(new <span class=\\"hljs-type\\">RegExp</span>(<span class=\\"hljs-type\\">UNIQUE_WRAPPERS</span>[<span class=\\"hljs-number\\">1</span>], \'g\'), \'&lt;/span&gt;\');\\n        }\\n        <span class=\\"hljs-keyword\\">return</span> value;\\n      }\\n      <span class=\\"hljs-keyword\\">const</span> renderNode = (node: <span class=\\"hljs-type\\">TreeNodeOptions</span>) =&gt; {\\n        <span class=\\"hljs-keyword\\">const</span> content = transform(node.name, keywords.value);\\n        <span class=\\"hljs-keyword\\">return</span> &lt;<span class=\\"hljs-keyword\\">div</span> style=<span class=\\"hljs-string\\">\\"padding: 0 4px;\\"</span> innerHTML={ content } /&gt;;\\n      }\\n      <span class=\\"hljs-keyword\\">return</span> {\\n        list,\\n        search,\\n        renderNode\\n      }\\n    }\\n  });\\n&lt;/script&gt;\\n</code></pre>"}}')},f066:function(e,n,s){"use strict";s("49e3")},fe3d:function(e,n,s){var t=s("24fb"),a=s("d5cb");n=t(!1),n.i(a),n.push([e.i,'*{padding:0;margin:0}body,html{width:100%;height:100%}body{color:#333;font-size:14px;font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;font-variant:tabular-nums;line-height:1.5;background-color:#fff;font-feature-settings:"tnum"}',""]),e.exports=n}});